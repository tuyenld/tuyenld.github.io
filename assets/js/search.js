// Based on a script by Kathie Decora : katydecorah.com/code/lunr-and-jekyll/

// Create the lunr index for the search
var index = elasticlunr(function () {
  this.addField('title')
  this.addField('author')
  this.addField('layout')
  this.addField('content')
  this.setRef('id')
});

// Add to this index the proper metadata from the Jekyll content

index.addDoc({
  title: "Cứ đi rồi sẽ đến... [Chuyện đi học]",
  author: null,
  layout: "post",
  content: "Source: Notes by Vy Vy Le\n\nTháng 7…\n\nTâm điểm của những ngày hè oi bức ở Hà Nội\n\nTháng 7 của tôi hôm nay\n\nNó không còn là tháng 7 của 7 năm về trước khi tất cả những đứa 18 tuổi phải vật lộn bước vào kỳ thi đại học\n\nKhi có đứa vì thức đêm liên tục mà ngất ra tưởng fai bỏ thi đi bệnh viện\n\nTháng 7 năm nay - Tôi đang ngồi ở 1 quán cafe nhỏ ven hồ\n\nTháng 7 của những rộn rịp, hồi hộp và một chút lo lắng cho 1 cuộc hành trình dài sắp tới\n\nTôi sẽ lại đến trường, lại đi học, lại thức đêm, lại ôn thi\n\nTôi sẽ lần đầu tiên được biết đến cảm giác xa nhà, xa Hà Nội\n\nĐể đi, để học, để khám phá, để trải nghiệm\n\nĐể được đặt chân đến những miền đất mới\n\nĐể những ước mơ trở thành hiện thực\n\nĐể được sống trọn vẹn với những hoài bão của tuổi trẻ\n\nTôi ngồi quan sát con phố nhỏ\n\nNắng nhạt lọc qua tán cây nhảy nhót trên mặt đường\n\nĐêm qua trời vừa mưa nên sáng nay mát dịu\n\nGió nhẹ thổi làm tờ giấy trắng trên bàn khẽ bay mất\n\nMột gánh tào phớ đi qua, tiếng dép loẹt quẹt trên mặt đường\n\nTôi phát hiện ra mình đã bỏ lỡ rất nhiều nếu cứ đi làm từ sáng sớm rồi trở về vào lúc chiều tối\n\nNhững điều nhỏ nhặt giản dị trong cuộc sống hàng ngày thường dễ bị bỏ qua\n\nTôi quyết định viết 1 cái gì đó\n\nChỉ là một câu chuyện nhỏ thôi\n\nMột thứ có thể truyền cảm hứng cho nhiều người\n\nNhư chính những điều mà tôi đã đọc được và truyền cảm hứng cho tôi trong những năm qua\n\nMột thứ thay cho lời cảm ơn tới những người đã giúp đỡ tôi trong suốt một thời gian dài\n\nMột thứ để nhắc nhớ tôi rằng: sau này dù cuộc sống có khó khăn thử thách thế nào tôi cũng có thể vượt qua, vì đã có lúc tôi làm được những điều kỳ diệu (với cá nhân tôi) thế này\n\nTôi muốn viết nó cho bạn &amp; cho chính mình!\n\n(Những người tôi muốn cảm ơn đều không được nhắc tên ở trong này, nhưng tôi tin họ sẽ biết họ là ai trong câu chuyện của tôi!)\n\n\n\nTôi đã thất bại như thế nào?\n\nChắc đa phần mọi người sẽ kể về việc vì sao mình làm được một điều gì đó\n\nMà ít ai nói cho bạn biết vì sao bạn không làm được một điều gì đó\n\nBạn đi xin việc, bạn mà không được thì automatically là bạn sẽ chờ lâu lâu mà ko thấy được gọi vào vòng sau\n\nBạn xin học bổng, bạn mà không được thì tử tế bạn sẽ nhận được một cái mail bắt đầu là “We regret to inform you that…”, còn không thì cũng bặt vô âm tín và bạn tự hiểu là bạn trượt\n\nKhông ai cho bạn biết điểm mà bạn được và ranking thứ tự rõ ràng như đi thi đại học, biết một chọi mấy, biết lấy mấy, trượt mấy, bạn ở đâu, thiếu mấy điểm…\n\nMọi email follow up sau đó đều sẽ không có ai trả lời\n\nTôi sẽ kể cho các bạn nghe câu chuyện của mình\n\nCho những ai đã, đang, và sẽ đi trên con đường mà tôi đã chọn\n\nCho những ai mong muốn tìm thấy 1 người giống như mình\n\nCho những ai luôn thất bại\n\nCho những ai không dễ dàng từ bỏ ước mơ\n\nCho những ai đang sắp sửa gục ngã cần được tiếp thêm sức mạnh\n\nCho những ai tin rằng điều kỳ diệu sẽ đến khi bạn thực sự tin tưởng và theo đuổi ước mơ\n\nVì nhiều khi tôi nghĩ rằng\n\nCó thể khi bạn đạt được một điều gì đó, chưa chắc đã là vì bạn tốt hơn bạn của ngày hôm qua đâu\n\nChỉ đơn giản là tôi tin rằng\n\n“Cuộc sống luôn công bằng theo cách riêng của nó”\n\nBạn đạt được vì bạn đã nhiều lần không đạt được\n\nBạn thành công vì bạn đã nhiều lần thất bại\n\nVậy thôi.\n\nTất nhiên là\n\nỞ đây tôi không đề cập đến những bạn cứ làm cái gì là được luôn cái đó\n\nTôi may mắn biết rất nhiều bạn như vậy ở xung quanh\n\nĐừng vội kết luân những bạn đó chỉ may mắn không thôi\n\nTôi nhớ đã đọc được ở đâu đó là: “Luck is what happens when preparation meets opportunity.”\n\nHọ có thể không quá xuất sắc, họ cũng có thể không quá chăm chỉ hay quyết tâm\n\nNhưng họ đủ may mắn để làm đủ tốt khi họ gặp được cơ hội\n\nTrở lại với câu chuyện của mình\n\nTôi đã có mơ ước được đi du học từ những ngày cấp 3 khi xem “Đường lên đỉnh Olympia” thấy các anh chị ở miền quê nghèo vượt khó học giỏi được tặng suất học bổng đi Úc tôi thấy nể phục và ghen tị kinh khủng\n\nKhi anh chị em họ hàng trong gia đình cứ lần lượt ra nước ngoài học tập\n\nKhi bạn bè/những người tôi quen biết xung quanh cũng từ từ đi học năm bảy năm không tin tức\n\nTôi thì chỉ luôn có mặt trong những bữa tiệc liên hoan chia tay hay ra sân bay tiễn chào mọi người\n\nTừ ngày đó, tôi đã hứa với lòng mình sẽ có ngày tôi đặt chân đến châu Âu\n\nVới tôi châu Âu luôn được cất ở một vị trí đặc biệt\n\nTôi không chỉ muốn đặt chân đến đó, ở lại đó vài tuần như một người khách du lịch\n\nTôi đã luôn mong ước được học tập, làm việc và được sống ở châu Âu\n\nƯớc mơ đó cứ âm ỉ, âm ỉ,  nhưng quyết liệt, tôi nghĩ thế\n\nRồi tôi vào đại học\n\nNhững giấc mơ cứ xa dần xa dần mà tôi quên mất\n\nDu học là điều gì đó quá xa xỉ, thậm chí cả trong suy nghĩ\n\nLàm sao tôi có thể đi học được khi mà số tiền cần phải chi trả lớn hơn bất cứ khoản tiết kiệm nào của gia đình\n\nMục tiêu của tôi ngày ấy đơn giản lắm\n\nTôi chỉ ước vào được Đại học Ngoại Thương, cố gắng học hành được cái bằng khá, rồi ra trường kiếm được một công việc ổn định lương tầm tầm, tự nuôi được bản thân và đóng góp được cho gia đình\n\nThế rồi thì\n\nVào năm thứ 2 đại học, tôi thấy một con bé bạn bỗng chốc được đi học ở nước ngoài nhờ kiếm được một suất học bổng của 1 tổ chức phi chính phủ\n\nHọc bổng lúc đó với tôi là một khái niệm quá sức xa lạ\n\nNgày trước tôi thậm chí còn ngô nghê tới mức tưởng học bổng tức là ai học giỏi quá, siêu phàm quá thì đc bỏ vài năm học lên cao\n\nNhư thế gọi là học bổng\n\nHóa ra đến lúc đó tôi mới biết học bổng tức là được cho tiền để đi học.\n\nLúc đó tôi nể phục nó lắm\n\nQuan trọng hơn tôi ngộ ra 1 điều:\n\nHóa ra mình vẫn có thể đi du học mà ko mất tiền\n\nHóa ra du học ko chỉ dành cho những người có điều kiện\n\nHóa ra những người có thể đi du học ko mất tiền là tồn tại và ở rất gần quanh ta\n\nVà tôi bắt đầu search google hai chữ “học bổng” lần đầu tiên trong đời\n\nTình cờ tôi tìm được một trang mạng cá nhân\n\nĐó là trang blog của một người có nickname là TungKelvin với slogan là “There can be miracles when you believe”\n\nVà bài viết đầu tiên tôi đọc là “Tôi đã apply thành công học bổng toàn phần master như thế nào?”\n\nBài viết rất hay, rất cụ thể, đầy đủ, chi tiết về các bước xin học bổng\n\nTrang blog còn tổng hợp rất nhiều thông tin của các học bổng Master toàn phần khác nhau ở các nước châu Âu với các bài chia sẻ kinh nghiệm sưu tầm tổng hợp từ những anh chị đi trước\n\nSau khi đọc xong bài đó, tôi như người mù được khai sáng và được tiếp thêm rất nhiều sức mạnh\n\nTôi bắt đầu đăng nhập vào ttvnonline - diễn đàn du học được highly recommend trong trang cá nhân đó\n\nCâu nói mà tôi vẫn nhớ nhất trên diễn đàn của các anh chị cho đến tận bây giờ đó là: “Luôn có học bổng cho người không bao giờ từ bỏ”\n\nTôi thử theo dõi 1 topic về học bổng\n\nĐầu tiên chỉ định đọc qua thôi\n\nNhưng càng đọc càng như được khai sáng\n\nTôi say mê miệt mài dành hằng đêm để đọc hết các chủ đề về học bổng toàn phần trong suốt 1 tháng\n\nCó những hôm thức đến hai ba giờ đêm để đọc\n\nTham khảo profile của những người đã thành công\n\nVừa đọc vừa take note kín đặc quyển sổ những điểm cần lưu ý, những học bổng hay, những tip quan trọng\n\nCảm thấy xin học bổng là một quá trình gian nan bền bỉ\n\nVà hồi hộp theo từng đợt công bố kết quả cùng các anh chị\n\nCó những người apply 4-5 năm vẫn không từ bỏ\n\nCó những người lấy chồng đẻ con xong vẫn cảm thấy đó là ước mơ lớn nhất trong đời cần thực hiện\n\nCó những người liên tục thất bại cảm tưởng như tất cả các cánh cửa đã đóng lại cả rồi vẫn tiếp tục kiên trì bước đi với niềm tin “All roads lead to Rome”\n\nVà rồi họ cũng đều thành công\n\nDù sớm dù muộn\n\nQuan trọng là họ đã đi đến cùng\n\nVì vậy mà giây phút hái quả thực sự rất xúc động\n\nDù chỉ là người ngoài cuộc quan sát như tôi mà còn có thể bật khóc trước niềm hạnh phúc ngày công bố kết quả sau hàng tháng trời hồi hộp phấp phỏm chờ đợi của các anh chị\n\nTừ thời điểm đó tôi quyết tâm vạch ra một kế hoạch hơi dài lần đầu tiên trong đời\n\nTôi nghĩ tại sao mình ko thử apply học bổng\n\nMình cũng có xuất phát điểm giống những người mình đọc\n\nSao họ làm được mà mình thì không\n\nCơ hội là dành cho tất cả mọi người\n\nTôi vẫn nhớ đã nghe ở đâu đó ai đó nói thế này:\n\nViệc khó nếu thử làm thì vẫn có xác xuất thành công, còn nếu vì sợ mà không làm thì chắc chắn là không thành công\n\nHồi đó tôi muốn đi học càng nhanh càng tốt\n\nNếu có thể tôi muốn được đi ngay sau khi ra trường\n\nSau khi lọc ra tất cả các tiêu chí, tôi đặc biệt thích 1 học bổng: Học bổng chỉ yêu cầu kết quả học tập (ít nhất ở trong top 10% của khoa), ko phỏng vấn, ko cần kinh nghiệm làm việc và có thể apply ngay khi đang học năm 4 chưa cần bằng đại học, ko ưu tiên khu vực nhà nước, nghiên cứu hay giảng dạy, chương trình học bằng tiếng Anh, ra trường có thể đi học luôn, cover toàn bộ chi phí học tập và ăn ở\n\n(Xin chú thích là do đã xác định ngay từ đầu về khả năng tài chính cá nhân nên tôi chỉ nhắm vào các học bổng toàn phần - tức là ko chi cover 100% học phí mà còn cover toàn bộ ăn ở và đi lại)\n\nTừ động lực đó, tôi đặt ra những target sau: Nằm trong top 5% GPA của khoa, tham gia hoạt động ngoại khóa tích cực, IELTS đạt tối thiểu 7.0.\n\nĐó là những thứ duy nhất tôi nghĩ mình có thể (cố gắng) làm được lúc bấy giờ\n\nTạm lướt qua việc làm thế nào để tôi đạt được những target đó mặc dù nó cũng là những câu chuyện dài\n\nNhưng đó cũng là lần đầu tiên tôi đặt ra những mục tiêu cần phải làm trong một khoảng thời gian tương đối dài\n\nVà việc thực hiện nó cũng là những việc phải theo đuổi trong hàng năm trời\n\nGiờ nghĩ lại tôi cũng thấy khó tin\n\nKhông hiểu sao hồi đó tôi lại có thể sắp xếp được thời gian làm nhiều việc cùng lúc đến vậy\n\nBài vở năm 3, năm 4 rất bộn bề\n\nTôi vừa lo học, lo thi, vừa đi làm, đi tình nguyện, vừa tham gia nghiên cứu khoa học, vừa học lại thi lại 1 số môn tôi bỏ hồi năm 2 do phải nghỉ học nằm viện 1 tháng trời\n\nTôi còn fai ôn thi IELTS, chuẩn bị hồ sơ, tìm hiểu thông tin học bổng, tìm đề tài luận văn, apply internship\n\nTôi còn tranh thủ apply một vài học bổng hỗ trợ tài chính nhỏ trong nước để làm mạnh hồ sơ từ Amcham, SCIC, Citibank…\n\nChưa kể còn thời gian hẹn hò…:P\n\nGiờ cho tôi làm lại chắc chịu!\n\nĐến năm thứ 4 đại học tôi vừa kịp hoàn thành tất cả những mục tiêu\n\nCó được chứng chỉ ielts vào tháng 10 năm 2010, tôi thu xếp nộp bộ hồ sơ học bổng đầu tiên vào tháng 12 năm đó.\n\nHồi đấy tôi đi học nửa ngày và đi làm thêm nửa ngày\n\nBất cứ khi nào có thời gian rảnh là tôi lại nghiên cứu về học bổng\n\nTôi dành hàng đêm để ngồi viết bài luận\n\nKhi đó tiếng Anh của tôi còn kém, cái SOP (Statement of Purpose) đầu tiên thực sự đã khiến tôi vô cùng chật vật\n\nTôi tham khảo các mẫu viết trên mạng, cop nhặt và cố gắng viết những thứ thật bay bổng cao siêu\n\nNhững thứ mà cho đến một năm trước đây tôi vẫn nghĩ là nó rất hoàn hảo (Nhưng thực ra là không, lý do vì sao tôi sẽ giải thích ở phần sau)\n\nTôi gửi bài cho một số thầy cô trong trường có kinh nghiệm xin học bổng góp ý hộ (điều mà với riêng tôi sau này ngộ ra là không ai hiểu mình bằng mình). Cho dù có nhờ người giúp đỡ thì họ cũng chỉ có thể góp ý giúp bạn lời văn và logic bài viết mà thôi, còn việc bạn làm được gì, bạn kết nối nó ra sao, bạn dẫn dắt câu chuyện thế nào, đó là việc bạn fai tự làm, tự suy nghĩ, đầu tư thời gian công sức đủ nhiều, xóa đi sửa lại rất nhiều lần\n\nHồi đó tôi chẳng có tiền, việc apply các học bổng thực sự là vô cùng tốn kém\n\nNgoài việc sao in chứng thực rất nhiều giấy tờ, tôi phải gửi sang châu Âu bằng chuyển phát nhanh mà mỗi lần chuyển đều ngấp nghé 1 triệu tiền phí\n\nHồ sơ một đi không trở lại, nếu trượt thì cũng coi như là thôi\n\nChưa kể có những trường còn bắt nộp phí ứng tuyển (application fee) cũng tầm 50 euro\n\nNghĩ xót nên tôi cũng chỉ chắt lọc các trường cho apply online và không thu phí\n\nSau khi qua được vòng nhập học ở trường (thứ mà cũng fai nín thở hồi hộp chờ đợi) và fai follow 1 lô xắc xông các loại process thì tôi nhận được thư báo trượt học bổng lần đầu tiên trong đời\n\nKhi đó tôi đã đi làm ở nơi làm việc đầu tiên\n\nHôm đó là một ngày siêu bận và căng thẳng\n\nTôi thậm chí không có quá nhiều thời gian để mà buồn\n\nTôi tặc lưỡi động viên bản thân dù sao cũng là lần đầu thử sức\n\nNăm sau nhất định sẽ khá khẩm hơn\n\nThế rồi trong suốt 2 năm sau đó, lần lượt tôi nghiên cứu hầu hết các học bổng toàn phần, đa phần là học bổng chính phủ\n\nTừ Anh, Úc, New Zealand, Eramus Mundus cho đến Bỉ, Hà Lan, Nauy, Thụy Sĩ, Thụy Điển…\n\n(Xin chú thích là học bổng chính phủ tức là trợ cấp của chính phủ nước ngoài cho sinh viên toàn cầu hoặc sinh viên của các nước đang phát triển có điều kiện được học ở những nước phát triển với mục tiêu đào tạo ra nguồn nhân lực tốt hơn cho sự phát triển của đất nước :D :D :D chứ ko fai là học bổng của chính phủ Việt Nam)\n\nVì tôi làm cho công ty nước ngoài khu vực tư nhân nên hiển nhiên tôi ko đủ điều kiện apply các học bổng của chính phủ Việt Nam\n\nHơn nữa tôi ko đc tin tưởng lắm vào tính công bằng và minh bạch của những học bổng này\n\nNói là apply hầu hết thực ra cũng ko hẳn đúng\n\nTôi nghiên cứu kỹ tất cả nhưng chỉ apply chọn lọc những học bổng mình đạt điều kiện hồ sơ hay cảm thấy mình có thế mạnh\n\nChứ cũng ko hẳn là rải hồ sơ càng nhiều thì sắc suất trúng càng cao\n\nCho nên giờ bạn có hỏi tôi quy trình apply học bổng toàn phần nào hầu như tôi cũng nắm được, dù tôi chưa apply học bổng đó bao giờ\n\nTôi bắt đầu vào được đến vòng phỏng vấn cuối cùng của một số học bổng\n\nCuộc bàn luận trên các diễn đàn du học ngày càng diễn ra sôi nổi và nóng hổi hơn khi vào mùa\n\nTôi hăm hở, háo hức, quyết tâm dù cho những lúc công việc bận rộn, hẹn hò và các kế hoạch vui chơi khiến tôi xao lãng\n\nHoặc bắt đầu nhận được những thông báo trượt tiếp theo hoặc bặt vô âm tín những hồ sơ gửi đi không có lời đáp\n\nTôi may mắn vì luôn có công việc tốt từ sau khi ra trường nên trượt học bổng tôi vẫn còn công việc\n\nTôi không quá chông chênh nhưng dường như tôi cảm thấy mình chủ quan, xao nhãng ở những phút quyết định\n\nTôi nghĩ mình đã chưa làm đến 100% sức mình có\n\nThời gian apply mỗi học bổng thông thường fai từ 3-6 tháng cho đến khi có kết quả, nó cũng khiến tôi phần nào bị mất tinh thần bớt quyết tâm đi khi vào những giai đoạn nước rút\n\nChừng nào tôi còn cảm thấy việc apply học bổng chỉ như một option khác bên cạnh công việc, chừng nào tôi còn chưa đặt hết 100% quyết tâm vào nó, chừng nào tôi còn nghĩ “được thì tốt ko được thì thôi”, có lẽ chừng đó những người khác vẫn xứng đáng để được nhận học bổng hơn tôi\n\nMùa apply năm thứ ba\n\nCú hích lớn thúc đẩy tôi chính là tin đứa bạn thân nhận được học bổng toàn phần đi Châu Âu\n\nĐó là mùa apply đầu tiên của nó\n\nNhưng nó đã cố gắng hết sức và đã “mất tích” trong một thời gian dài để chuẩn bị thật tốt\n\nVà nó đã thành công\n\nNhận được tin nó trúng học bổng, tôi vừa mừng cho nó lại vừa hụt hẫng cho mình\n\nTôi tự đặt câu hỏi tại sao mình lại dễ dàng từ bỏ sớm đến vậy?!\n\nNghĩ mình thật kém cỏi và thiếu quyết tâm\n\nTôi quyết định tìm ra lý do vì sao mình trượt\n\nTôi biết rõ những điểm yếu của bản thân khi apply hb chính phủ\n\nTôi không làm việc cho cơ quan Nhà nước\n\nTôi cũng không thuộc khối nghiên cứu giảng dạy hay làm các công việc có tính chất chính trị, ngoại giao, truyền thông hay cộng đồng\n\nTôi cũng ko thuộc diện ưu tiên vùng sâu vùng xa :P\n\nTôi làm việc cho công ty nước ngoài, khu vực tư nhân, ngành bất động sản\n\nTôi cần phải làm gì đó để biến những điểm yếu này thành điểm mạnh của mình?!\n\nRà soát lại toàn bộ hồ sơ, những thứ mà trước giờ tôi luôn nghĩ là rất tốt rất ổn rồi\n\nTôi nhận ra là: Bài esay của tôi, nó chẳng đọng lại trong tôi cái gì cả. Nó thật bay bổng cao siêu, nhiều từ khó câu dài nhưng nó chẳng làm tôi khác biệt.\n\nVà tôi quyết định làm lại toàn bộ\n\nTôi viết lại SOP mà không sử dụng bất cứ một tài liệu tham khảo nào nữa, tôi viết cái mà tôi biết, tôi học được, tôi đã làm sẽ làm, những gì là tôi và của tôi, chân thành và cụ thể nhất\n\nTôi cần 1 câu chuyện\n\nMột câu chuyện chân thực\n\nTôi cần connect tât cả những thứ mình đã làm thành một con đường\n\nTôi dành thời gian sửa lại toàn bộ CV\n\nThi lại để nâng điểm IELTS\n\nTôi lập 1 file excel chi tiết timeline, điều kiện, hồ sơ cho tất cả những học bổng toàn phần trong ít nhất một năm tới\n\nĐã có trong tay hơn 2 năm kinh nghiệm làm việc, vì vậy mà số học bổng tôi đủ điều kiện apply đã nhiều hơn\n\nTôi tìm hiểu chi tiết từng học bổng với những tiêu chí lựa chọn và ưu tiên khác nhau\n\nXin reference là công việc tôi ngại nhất trong cả quá trình vì đó là thứ duy nhất tôi không thể cố gắng mà tự làm được, vì không phải lúc nào cũng có thể xin được và không fai lúc nào cũng có thể gặp được người mình cần xin\n\nKhông thể cứ apply học bổng nào là lại lẽo đẽo liên hệ nhờ người ta viết giúp reference được\n\nTôi quyết định reach out đến những người mà trước giờ tôi cứ ngại ngần\n\nTính tôi ngại nhờ vả nên việc đi nhờ người khác giúp đỡ khiến tôi thấy rất khó khăn\n\nNhưng tôi ko có lựa chọn nào khác là fai cố gắng hết sức dù chỉ một lần trong đời\n\nĐể không bao giờ phải hối hận vì bất cứ việc gì mình chưa làm\n\n(Sau này thì tôi học được là: cảm giác ngại nhờ vả chỉ là trở ngại tâm lý từ phía tôi mà thôi - I’m a typical Leo by the way. Các mối quan hệ xung quanh ko fai được gây dựng để giúp đỡ bạn khi nào đó, nhưng người có nhiều mối quan hệ chắc chắn có nhiều khả năng thành công hơn. Just knock the door and ask for help when needed. Rõ ràng là mọi ng đều rất sẵn sàng giúp tôi)\n\nMột trong 3 người tự tay viết cho tôi 7 thư học bổng khác nhau gửi cho 7 tổ chức học bổng toàn phần\n\nCòn lại tôi đã chủ động dành thời gian viết liền 15 thư giới thiệu khác nhau customize cho từng học bổng mà tôi sẽ apply cho 1 năm tới\n\n15 thư gửi cho 2 người tôi tin tưởng gửi gắm (1 là chị sếp của tôi, 1 là thầy hiệu phó) tổng cộng là 30 bản cần ký và đóng dấu\n\nTôi vẫn nhớ có những ngày trầu trực ở văn phòng thầy lúc chiều tối với đống giấy tờ dày cộp và gương mặt siêu tội nghiệp\n\nThầy đã ký cho tôi 2 năm liên tiếp vậy mà tôi vẫn ko thể đến gặp thầy để báo tin vui\n\nNgày hôm đó tôi thấy mình như một sự phiền toái lớn\n\nCũng may tôi được thầy cô, bạn bè và nhất là chị sếp ủng hộ sẵn lòng ký cho tôi chừng ấy giấy tờ\n\nXong hồ sơ, giai đoạn nhọc nhằn và mệt mỏi nhất, tôi thở phào nhẹ nhõm\n\nTôi bắt đầu chiến dịch apply theo đúng timeline đã vạch ra\n\nDù công việc vô cùng bận rộn, tôi vẫn cố gắng dành thời gian để follow đúng timeline này\n\nApply xong cái nào tôi lại highlight gạch khỏi list\n\nNăm thứ ba với những sự chuẩn bị chu đáo nhất có thể\n\nTôi tự nhủ mình sẽ có thể dừng lại khi mình ko còn gì để ân hận\n\nNhững ước mơ chưa được thực hiện khiến tôi chưa bao giờ có cảm giác ổn định trong công việc\n\nCho dù đó là những công việc tôi đã phải nỗ lực rất nhiều mới có được\n\nTôi vẫn thấy mình cần phải làm gì đó khi mình còn trẻ\n\nCũng ko có quá nhiều những học bổng mà tôi chưa từng apply hay nghiên cứu\n\nChướng ngại của tôi là: apply lại những nơi mình đã trượt\n\nTôi phải đối mặt với nỗi sợ và sự mất tự tin của bản thân\n\nNgoài một số học bổng toàn phần của trường tôi nộp thêm của năm nay, có 4 học bổng chính phủ mà tôi tập trung tâm huyết nhất, 2 trong số đó tôi đã từng apply\n\nTôi cũng vào được đến vòng trong cùng như lần trước\n\nTôi cố gắng hết sức để đối mặt với nỗi sợ hãi của bản thân khi fai gặp lại hội đồng tuyển chọn đã phỏng vấn tôi một năm trước đây\n\nNhững câu trả lời đã không còn ngô nghê\n\nThế nhưng vẫn bị thiếu 1 cái gì đó\n\nMột mắt xích then chốt kết nối tất cả những thứ tôi đã làm với những dự định tương lai mà một lần nữa tôi thấy mình hoàn toàn bất lực vẫn ko thể vượt qua\n\nSau tất cả, cô giám khảo khó tính hỏi tôi: What if you will fail again this year?\n\nCâu hỏi unexpected nhất của tôi\n\nTại thời điểm đó tôi đã biết mình sẽ lại trượt\n\nTôi lấy hết những can đảm để trả lời với tất cả những gì mà tôi suy nghĩ và tâm huyết\n\nHiển nhiên, tôi sẽ ko apply lại thêm 1 lần nữa\n\nNgày biết kết quả, đương nhiên tôi ko được gọi\n\nTôi chỉ biết qua 1 chị bạn ở cơ quan quen người ở đại sứ quán\n\nChị đã giúp đỡ hỏi han cho tôi rất nhiều nhưng tôi cũng chẳng thể làm tốt hơn\n\nTôi vẫn nhớ như in cái ngày hôm đấy\n\nChị nhìn thấy tôi, ko nói câu gì\n\nChỉ sau 3 giây, tôi biết chuyện gì đã xảy ra\n\nTôi gật đầu em hiểu và tôi cố mỉm cười như thể mình chẳng sao\n\nHóa ra hôm đó tôi đã khóc\n\nTôi thấy mình mất tự tin vào bản thân\n\nTôi thấy mình đã cố gắng hết sức mà vẫn ko thể làm được\n\nTôi thấy có cái gì đó tôi mãi mãi ko thể vượt qua\n\nTôi thấy mình là kẻ thất bại\n\nTôi hoang mang, hụt hẫng và muốn gục ngã\n\nTôi nghi ngờ chính năng lực của bản thân\n\nTôi tìm gặp ông sếp già người Đan Mạch, người luôn truyền cảm hứng cho tôi trong công việc và cuộc sống\n\nTôi không còn chịu đựng một mình mà thẳng thắn chia sẻ những thất bại của mình\n\nTôi lắng nghe những lời khuyên\n\nTôi vẫn nhớ như in những điều mà sếp nói với mình: “Điều quan trọng nhất trên đời là phải biết mình thực sự muốn gì. Đừng có chỉ ước mơ không mà phải thực sự xây dựng nó. Du học, được đi nước ngoài không phải là mục đích cuối cùng. Mày phải tìm ra điều mày thực sự muốn thì mày mới có thể thuyết phục được hội đồng tuyển chọn cũng tin rằng mày là người mà họ cần. Nếu mày không thể thì ngay cả 3 năm nữa, mày vẫn sẽ quay lại gặp tao và nói mày vẫn thất bại.” (đại từ “mày”, “tao” chỉ là thói quen của tôi khi dịch tiếng Anh :P)\n\nCó một cậu bạn chịu nghe tôi than vãn mỗi khi tôi trượt học bổng\n\nRồi cùng tôi work out ra một câu chuyện với những móc nối khác nhau\n\nCó một cô em họ thường gọi điện động viên cổ vũ tôi\n\nSau tất cả, tôi nghĩ mình đã tìm ra được điểm mấu chốt đó\n\nTôi không cần phải biến mình thành một người hoàn hảo mà tôi phải phải trả lời được câu hỏi: Tại sao người ta phải cho tôi tiền?\n\nTại sao người ta phải đầu tư vào tôi?\n\nSố tiền mà ngay cả 3 năm đi làm tiết kiệm của tôi cũng chẳng thể có được\n\nNhững thành tích tôi kể, những gì tôi đã làm, thực ra là tôi đã học được gì???\n\nHãy cụ thể nhất có thể\n\nSau đó, 3 hồ sơ còn lại tôi nộp vào thời điểm cuối năm 2013\n\nMột hồ sơ đã vô lý không cho tôi vào vòng phỏng vẫn vì lý do tôi nộp vào ngày deadline cũng là ngày đầu tiên tôi đi làm ở chỗ mới nên ko thể xin giấy giới thiệu của công ty mới\n\nMột hồ sơ đem lại cho tôi suất học bổng 100% học phí trong 2 năm ở châu Âu nhưng tôi vẫn ko thể nhận vì chi phí sinh hoạt ở quốc gia Băc Âu đắt đỏ nhất thế giới này\n\nBộ hồ sơ cuối cùng: Irish Aid\n\nNộp hồ sơ xin học vào tháng 12\n\nPhỏng vấn lần 1 bằng điện thoại từ Ireland vào 30 tết\n\nĐược nhận học, nộp hồ sơ học bổng vào tháng 3\n\nPhỏng vấn học bổng và thuyết trình vào tháng 4\n\nQua bao nhiêu vòng hồi hộp nín thở, tôi một lần nữa lại bước vào vòng phỏng vấn với nỗi sợ hãi ko thể vượt qua chính bản thân mình\n\nTôi tự nhủ: đây là học bổng cuối cùng mình nộp cho fall intake 2014\n\nHọc bổng duy nhất cho phép mình được nói nhiều hơn là fai thụ động trả lời những câu hỏi thông thường\n\nHọc bổng duy nhất cho phép ứng viên được thuyết trình theo chủ đề - một trong những kỹ năng hiếm hoi tôi cảm thấy tự tin ở bản thân\n\n(thật ra format của học bổng đã được thay đổi 1 năm trước khi cho thêm phần presenting theo chủ đề vào phần interview)\n\nHầu hết các chủ đề năm nay đều khá xa lạ\n\nTôi dành thời gian tìm hiểu nghiên cứu thu thập dữ liệu để có 1 bài thuyết trình chất lượng\n\nTôi dựng bài công phu và luyện tập nói\n\nTôi connect tất cả những gì mình đã học và đã tích lũy được trong những năm đi làm để có một kết nối rành rọt nhất cho những gì tôi sẽ làm\n\nTôi muốn mình ở trong trạng thái chủ động và sẵn sàng nhất có thể\n\nVì tôi không muốn thấy mình một lần nữa sợ hãi\n\nDù trong bất cứ hoàn cảnh nào\n\nĐùng 1 cái, 2 ngày trước buổi thuyết trình tôi sốt cao\n\nKo thể hiểu nổi nguyên nhân, tôi tìm mọi cách để buộc mình hạ sốt trong vòng 24 giờ\n\nChưa bao giờ tôi thấy mình cần fai tỉnh táo hơn lúc đó\n\nLà người đầu tiên thuyết trình mở màn hội đồng Hà Nội vào lúc 8 rưỡi sáng\n\nTôi lo láng bồn chồn dậy từ lúc 4h để luyện tập nói thêm vài lần\n\nNhư một cơn ác mộng ập đến: tôi phát hiện ra mình ko nói được\n\nTôi hoàn toàn bị mất giọng chỉ sau 1 đêm như 1 trong những tác hại của cơn sốt\n\nTôi bật khóc và chỉ muốn hét ầm lên vì ko thể hiểu nổi chuyện gì đã xảy ra\n\nTôi cố gắng phát ra âm thanh nhưng hoàn toàn ko ra tiếng\n\nTôi tức giận chỉ muốn tung hê tất cả với ý nghĩ thực sự đây là điều mà mãi mãi tôi không bao giờ làm được ư\n\nTôi còn 3 tiếng để có thể nói trở lại\n\nTôi tu một ngụm mật ong đặc quánh và cố gắng từng chút từng chút một nói thật to\n\nTôi bắt đầu nói được trở lại nhưng là một giọng như vịt đực chữ có chữ mất\n\nThứ duy nhất khiến tôi luôn tự tin khi thuyết trình chính là giọng phát âm trôi chảy của mình, giờ ko còn nữa\n\nCố gắng đến 8h, tôi lấy lại đc khoảng 40% giọng nói\n\nTôi vẫn đến phỏng vấn dù nghĩ rằng mình sẽ thua\n\nBài thuyết trình may thay đã diễn ra suôn sẻ mà ko gặp bất cứ lỗi máy móc kỹ thuật nào\n\nTôi nói trôi chảy, gãy gọn, tự tin dù giọng rất khàn và yếu\n\nSau đó hội đồng phỏng vấn tôi trong 45’ tiếp theo\n\nTôi bình tĩnh trả lời từng câu hỏi và cố gắng rành mạch từng dự định của bản thân\n\nChỉ cần bản thân tôi không mẫu thuẫn, nhất định tôi sẽ thuyết phục được người ta tin tôi\n\nTới lúc này tôi mới thấy lợi ích của tính consistent trong kinh nghiệm làm việc\n\nNó cho tôi những hiểu biết sâu sắc và sự tự tin nhất có thể khi được hỏi về những điều tôi đã làm, đưa ra những dẫn chứng về những case study cụ thể trong công việc và những khó khăn bất cập mà tôi thực sự thấy sau những năm đi làm để thuyết phục hội đồng phỏng vấn\n\nSau tất cả, cô giám khảo lớn tuổi nhất hỏi tôi có câu hỏi gì không\n\nThường thì với câu hỏi này tôi sẽ chỉ hỏi những câu hỏi liên quan đến thông tin học bổng mà tôi chưa rõ như thời điểm công bố kết quả, đợt này lấy mấy loại mấy…\n\nThế nhưng không hiểu sao lúc đó trong đầu tôi lại nảy ra câu hỏi như một thắc mắc thường trực sau tất cả những thất bại liên tiếp ở những vòng phỏng vấn (Như tôi đã trình bày, sẽ không ai nói cho bạn biết vì sao bạn trượt, vậy tại sao không hỏi chính những người ra quyết định nếu như đây là cơ hội cuối cùng)\n\nTôi mạnh dạn đánh bạo: “What do you expect from candidates as interviewers?”\n\nĐột nhiên, bầu không khí căng thẳng của buổi phỏng vấn bị phá vỡ, toàn bộ panel phỏng vấn cười ồ lên với tôi\n\nCô giám khảo trẻ tuổi hơn vừa cười vừa trả lời: “Just like you!”\n\nMặt tôi thộn ra không hiểu nên hiểu câu này thế nào: đó là một câu đùa ngắn gọn nhất khi mà người ta ko có thời gian và cũng ko có trách nhiệm fai trả lời thí sinh câu hỏi này hay thực sự that’s what they meant?\n\nLàm xong, tôi về nhà với một sự nuối tiếc nho nhỏ khi bài thuyết trình chưa thể đạt đến mức độ tốt nhất có thể\n\nGiá mà tôi ko ốm, giá mà tôi ko mất giọng\n\nCó lẽ tôi đã cho mình quyền hy vọng nhiều hơn\n\nNhững ngày tháng 4 trôi qua trong sự thấp thỏm\n\nPhải nói rằng chờ đợi kết quả là một trong những giai đoạn gay cấn và nhiều cảm xúc nhất trong đời\n\nNếu bạn thử một lần theo dõi trọn vẹn 1 topic về du học trên diễn đàn, bạn sẽ ko bao giờ quên được những cảm xúc đó - những cảm xúc mà bạn  sẽ không có cơ hội nếm trải nếu chưa từng xin học bổng chính phủ\n\nTrích dẫn lời của 1 bạn đã chia sẻ trong bài viết “Con đường tôi đi” thì nó chính xác là như thế này: “…ngày nào cũng nhấn F5 ttvnol, F5 hộp thư cá nhân, thót tim khi đọc nhầm comment của ai và nghĩ rằng đã có kết quả, đau khổ thất vọng tưởng mình rớt vì mọi người đều đã nhận được mail, nhưng vẫn hi vọng thoi thóp biết đâu chưa gọi đến tên mình, và bỏ cuộc buông tay vì nghĩ rằng giờ này chắc đã thông báo xong hết rồi – mình rớt thật rồi, nhưng đến phút chót lại nước mắt giàn giụa vì biết mình đậu.”\n\nTôi may mắn được trải qua cảm xúc này vài lần\n\nLần này, lại là tháng 4, tháng đánh dấu những bước ngoặt lớn trong cuộc đời\n\nSau những thất bại đã trải qua, tôi hoàn toàn chuẩn bị tâm lý cho thêm một lần thất bại nữa\n\nTôi vẫn còn 8 bộ hồ sơ chưa nộp từ giờ đến cuối năm cho spring intake năm sau\n\nChỉ có điều\n\nTôi đã cố gắng hết sức mình rồi\n\nVà tôi cũng ko biết mình còn có thể làm tốt hơn được nữa ko\n\nVà đó chính xác là một ngày thỉnh thoảng vẫn xuất hiện trong những giấc mơ của tôi\n\nMột sáng mùa hè đẹp nhất trong đời\n\nTôi đang ngồi làm việc ở cơ quan và nhận được email của đại sứ quán\n\nTôi không dám mở cũng không dám nhìn subject\n\nTôi cố gắng trấn tĩnh lại nhịp tim của mình và chuẩn bị cho tình huống xấu nhất\n\nKhi lấy hết can đảm tôi mở email ra\n\nMột cảm giác lâng lâng vỡ òa mà cho đến bây giờ tôi vẫn không thể tin đó là sự thực\n\nTôi đã làm được\n\nTôi làm được rồi\n\nTôi muốn hét ầm lên\n\nTôi chạy ngay ra khỏi văn phòng trước khi để cho người ta thấy những giọt nước mắt của tôi\n\nTôi trấn tĩnh đọc kỹ lại email 2 lần 3 lần để chắc chắn là không có mọt sự nhầm lẫn nào ở đây\n\nĐiều đầu tiên tôi muốn làm đó là gọi điện cho mẹ\n\nTôi đã mong chờ giây phút này từ lâu lắm rồi\n\nĐiều khiến tôi không khỏi ngạc nhiên đó là\n\nĐa phần những người đc tôi báo tin họ còn mừng rỡ hơn cả tôi\n\nTôi hỏi họ vì sao\n\nHóa ra là bởi họ đã biết tôi trong một thời gian dài\n\nHọ đã luôn chứng kiến những cố gắng nỗ lực của tôi\n\nVà cái cách họ nhìn thấy thành quả của tôi cũng giống như cái cách tôi rơi nước mắt khi chứng kiến những thành quả của các anh chị trên diễn đàn\n\nPAID OFF!\n\nThế đấy, những giọt nước mắt hạnh phúc\n\nCuối cùng thì phép màu cũng đã xuất hiện\n\nCuối cùng tôi cũng đã có thể được đi học\n\nCuối cùng tôi cũng đã có thể được đặt chân đến châu Âu\n\nCuồi cùng tôi cũng đã có thể thực hiện được lời hứa của mình với mẹ\n\nQuan trọng hơn tôi đã chiến thắng được bản thân mình\n\nDám thất bại và dám theo đuổi một điều gì đó đến cùng\n\n\n  \n  UCD Michael Smurfit Graduate Business School (wikimedia.org)\n\n\nNghĩ lại thì\n\nTôi chẳng hối tiếc đâu\n\nTôi sẽ không ước là mình đã trúng học bổng ngay từ lần đầu tiên apply\n\nTrong số 15 bộ hồ sơ, cuối cùng tôi cũng mới chỉ nộp đến 7 bộ\n\nBa năm qua tôi nhận ra bản thân mình rõ hơn bao giờ hết\n\nTôi thấy mình đủ chín chắn và trưởng thành để mơ ước và thực hiện ước mơ\n\nTôi thấy mình đủ kinh nghiệm để biết mình muốn gì và mình có thể làm được gì\n\nTôi đã có 3 năm không phí hoài\n\nTôi đã có được những kinh nghiệm làm việc quý báu\n\nĐược gặp gỡ với những con người tuyệt vời và “thực sự xuất sắc”\n\nĐược đi, được trải nghiệm những miền đất mới\n\nĐược sống và được làm tất cả những gì mình mơ ước\n\nCuộc sống của tôi là thế:\n\nTôi muốn A và không bao giờ được A\n\nNhưng tôi lại thích những cái B, C, D mà tôi có thay vào\n\nNếu bạn hỏi tôi sợ nhất điều gì\n\nTôi sẽ trả lời rằng:\n\nTôi sợ nhất là tuổi trẻ mà chưa làm hết mình để theo đuổi những giấc mơ\n\n“I would rather say that I tried and failed than live a life of regret”\n\n25 tuổi, tôi đã thực hiện được một trong những ước mơ lớn nhất của mình\n\nTôi chỉ là một hạt cát nhỏ trong đại dương bao la rộng lớn\n\nVà so với nhiều người khác, tôi có thể mất nhiều thời gian hơn để đạt đến ước mơ của mình\n\nThành công của tôi có thể cũng chẳng lớn lao gì so với rất nhiều những người bạn/người anh/người chị xuất sắc trên các diễn đàn du học\n\nMà cũng không nên gọi đó là thành công\n\nĐi học chỉ là một sự khởi đầu\n\nCòn rất nhiều khó khăn thử thách ở phía trước\n\nNó không đảm bảo cho bạn có công việc tốt hơn, vị trí tốt hơn, mức lương cao hơn\n\nNhưng với tôi, đó là sự chiến thắng bản thân\n\nChiến thắng chính nỗi sợ, sự tư ti, những rào cản, và giới hạn mà bản thân tôi đã tự đặt ra cho chính mình\n\nNếu bạn còn do dự đắn đo điều gì, hãy dũng cảm bước tới\n\nChỉ cần bạn đừng bao giờ bỏ cuộc\n\nÀ, mà bạn cũng đừng vì đọc những thứ thế này của tôi hay nhìn người nọ người kia mà cảm thấy điều gì đó là quá sức nhé\n\nAi cũng cần cố gắng và một chút may mắn\n\nChỉ cần có ước mơ\n\nVà ước mơ đủ lớn\n\nKhông điều gì là không thế\n\nCuộc đời là những chuyến đi mà\n\nCứ đi rồi sẽ đến\n\nCứ gõ cửa, rồi cửa sẽ mở\n\nTôi tin điều đó!\n\n“Dare to fail - Once you are brave enough to fail, you are eligible to win!” - LV\n",
  id: 0
});
index.addDoc({
  title: "Một nghề cho chín còn hơn chín nghề",
  author: null,
  layout: "post",
  content: "Nguồn - thái\n\nngười ta nói, cách tốt nhất để ăn một con voi, là ăn một miếng thịt của nó mỗi ngày. ngẫm lại chuyện học, chuyện làm, mình thấy đây là một lời khuyên có lý. tri thức thì bao la vô tận, không thể nào ngày một ngày hai nắm bắt hết được, mà phải có thời gian, kế hoạch và phương pháp.\ncó thời gian nghĩa là phải kiên nhẫn và tập trung, ví dụ như muốn ăn một con voi, phải dành ra 3 tháng liên tục. có kế hoạch nghĩa là phải biết mình đang ở đâu và phải làm gì tiếp theo, ví dụ như bây giờ là đang ăn cái đầu, tiếp theo sẽ ăn cái mình của con voi.\ncó phương pháp nghĩa là phải biết lên kế hoạch, làm thế nào để thực thi kế hoạch trong thời gian dự tính, ví dụ như ăn voi thì phải biết cách xẻ thịt nó ra, biết cách ăn, phải biết con voi thì cái gì ngon, cái gì dở, cái gì cần tập trung ăn kỹ, cái gì bỏ đi cũng được.\ntrong ba yêu cầu này, cái khó nhất là phương pháp. riêng cách (tự) học, thì trường đại học đã dạy, vấn đề ở đây là không biết nên tập trung học cái gì. lúc này thầy cô, bạn bè, những người đi trước…sẽ là những người chỉ đường tốt nhất.\nmột kinh nghiệm khác mình rút ra được là đối với lĩnh vực tự nhiên, muốn học xa, học sâu, thì phải bắt đầu từ những môn khoa học cơ bản, trong đó toán là bắt buộc.\nnhững năm đầu đại học, mình đã không hiểu được yêu cầu quan trọng này, nên hết sức lơ là trong việc học toán, hậu quả là những ngày này, mình phải bắt đầu học lại các món lẽ ra phải vững rồi.\nnhiều lúc mình tự hỏi, học những thứ này có phí thời gian không? trong khi các bạn xung quanh thì đổ xô đi học MBA, thì mình lại ngồi cặm cụi học đại số tuyến tính, học lý thuyết số, học lý thuyết xác suất &amp; thống kê…mình cũng không biết nữa.\ndẫu vậy, mình không hiểu được chuyện, chỉ mới làm trong ngành vài năm, mà có một số bạn đã cảm thấy chán, “muốn gác kiếm”, chuyển sang làm kinh doanh hay các vị trí quản lý trung gian, không còn làm kỹ thuật nữa.\nmình cũng muốn học về kinh doanh và quản lý, nhưng cái cảm giác chưa nắm vững những kiến thức và kỹ năng nền tảng của cái nghề mình được đào tạo và làm việc bấy lâu nay làm cho mình rất khó chịu.\nmỗi lần nghe một bạn lập trình viên kêu chán lập trình sau 3-4 năm làm việc, là mình lại cảm thấy có gì đó rất bứt rứt. kiểu như leo núi, chưa lên đến đỉnh, mà đã vội xuống. đối với mình thì đây mới chính là phí phạm thời gian.\nvậy thế nào là lên đến đỉnh, cái gì là nền tảng? mình nghĩ đó là: hiểu hết ngọn ngành và có thể áp dụng tốt những mảng kiến thức của một chương trình đào tạo khoa học máy tính ở các trường đại học.\nđây là một nhiệm vụ rất khó, nhưng làm được. làm thế nào thì mình sẽ từ từ trao đổi, dựa trên kinh nghiệm học tập của mình. điều mình muốn nhấn mạnh ở đây là: có cần thiết không?\ntôi làm lập trình, thì chỉ cần biết C, Java, .NET hay Ruby, Python là đủ thôi, chứ cần gì phải học về database, operating system hay là networking? tôi làm mạng thì chỉ cần biết TCP/IP, có thêm cái bằng CCNA là tốt rồi, chứ cần gì phải biết lập trình?\nkinh nghiệm làm việc của mình cho thấy đây là tư duy sai lầm. biết nhiều hơn bao giờ cũng có lợi, giúp cho công việc đơn giản và dễ dàng hơn rất nhiều\nví dụ một lĩnh vực mà mình biết chắc là nếu học nó, sẽ đem lại nhiều lợi ích, đó là machine learning, nói nôm na là dạy cho máy tính biết cách tự học những kiến thức mới hay nhận dạng được những pattern trong mớ dữ liệu hỗn độn khổng lồ.\ncách đây vài năm, mình có mở một công ty, công ty mình có làm một phần mềm chống spam, và phần mềm này chỉ sử dụng một tí xíu kỹ thuật của machine learning thôi, nhưng đã tỏ ra cực kỳ hiệu quả so với các phần mềm không sử dụng kỹ thuật này.\nmachine learning cũng được đánh giá là kỹ năng số 1 mà bất kỳ nhà tuyển dụng nào cũng muốn ứng viên của họ phải có. cũng phải thôi, với lượng dữ liệu và thông tin khổng lồ được tạo ra mỗi ngày, kẻ nào hiểu được chúng nói gì thì kẻ đó sẽ là người chiến thắng.\nquay lại việc các anh kỹ sư máy tính bỏ việc sau khi ra trường vài năm. mình nghĩ đôi khi, chính môi trường làm việc, phải leo cao thì lương nó mới cao, đẩy người ta vào tình thế phải từ bỏ chuyên môn khi chưa đủ độ chín.\nmình nghĩ đây cũng là một điểm mà người làm quản lý cần phải chú ý: lương bổng và quyền lợi là một hàm của năng lực và hiệu quả công việc, chứ không phải của chức vụ hay vị trí.\nnhìn xung quanh, mình thấy rất khó tìm được ai đó có hơn 10 năm kinh nghiệm làm việc liên tục trong một lĩnh vực kỹ thuật nào đó. cao nhất chỉ là 5 năm.\nmình cũng đi làm hơn 5 năm rồi. và mình nghĩ bây nhiêu thời gian chỉ đủ để biết là mình đang thiếu kiến thức và kỹ năng nào, cần phải học thêm cái gì, để làm việc cho tốt hơn.\nvả lại, bạn nào cũng học MBA, về làm sếp hết, thì các bạn quản lý ai? những bạn mới ra trường, làm được 3-4 năm khác? rốt cuộc toàn những bạn không có kinh nghiệm và không đủ kiến thức làm việc với nhau.\nhậu quả là cái gọi là “nền CNTT VN” toàn phải đi mua đồ của nước ngoài về xài, bởi trong nước không tự sản xuất được, nguyên nhân chính là không có thợ lành nghề. bao nhiêu ngân hàng ở VN sử dụng phần mềm nước ngoài? ngay cả FPT, một công ty tự xem là đi đầu ở VN về công nghệ, nhưng khi thành lập ngân hàng, họ vẫn phải bỏ tiền ra mua phần mềm của Ấn Độ.\nnhiều bạn cho rằng, và mình đồng ý, do chúng ta còn non trẻ, chưa có nhiều kinh nghiệm. vậy hà cớ gì khi mới làm việc có vài năm, chưa đâu vào đâu, lại chuyển chuyên môn?\n",
  id: 1
});
index.addDoc({
  title: "Làm an toàn thông tin thì học gì",
  author: null,
  layout: "post",
  content: "Bài viết gốc - thái, May 02, 2012\n\n1. Giới thiệu\n\nTôi nhận được thư từ của nhiều bạn hỏi về việc nên học gì và như thế nào để có thể tìm được việc làm và làm được việc trong ngành an toàn thông tin (information security). An toàn thông tin là một ngành rộng lớn với rất nhiều lĩnh vực. Những gì tôi biết và làm được chỉ gói gọn trong một hai lĩnh vực. Có rất nhiều mảng kiến thức cơ bản mà tôi không nắm vững và cũng có nhiều kỹ năng mà tôi không thạo. Hack tài khoản Yahoo! Mail là một trong số đó. Tôi cũng không biết cách tìm địa chỉ IP của bạn chat :-(.\nXét theo năm mức ngu dốt thì tôi nằm ở mức “1OI - thiếu kiến thức” ở hầu hết các lĩnh vực trong an toàn thông tin. Cũng có lĩnh vực tôi nằm ở mức “2OI - thiếu nhận thức”. Nhiều lần đọc sách vở hoặc nói chuyện với đồng nghiệp, tôi hay nhận ra rằng có nhiều thứ tôi không biết là tôi không biết. Theo ý của anh Ngô Quang Hưng thì đây là chuyện bình thường:\n\n  Dân máy tính thường phải đọc/học rất nhiều để theo kịp sự phát triển với tốc độ ánh sáng của ngành mình. Trong quá trình này, với mỗi vấn đề X của ngành, ta sẽ chuyển dần dần từ 3OI xuống 1OI. Sau đó, nếu X là cái mà ta thật sự thích hoặc cần cho công việc thì sẽ chuyển nó lên 0OI.\n\n\n  Rất nhiều sinh viên và nghiên cứu sinh KHMT ở mức 3OI khi mới bắt đầu đi học. Sau đó họ tìm hiểu về quá trình nghiên cứu, quá trình tìm các vấn đề và hướng nghiên cứu mới, quá trính cập nhật kiến thức về ngành của mình, và chuyển dần các thứ lên 2OI. Để có một quá trình hiệu quả từ 3OI lên 2OI không dễ chút nào. Ví dụ đơn giản: các journals, conference nào trong ngành mình là có giá trị, làm thế nào để tìm đọc các bài trong chúng, phương pháp lọc bài đọc thế nào, vân vân.\n\nTôi thấy anh Hưng nói có lý, nên mục tiêu chính của bài viết này là cung cấp một quá trình hiệu quả để bớt ngu về an toàn thông tin.\n2. Làm an toàn thông tin là làm gì?\nTôi muốn viết phần này vì nhiều người tưởng tôi làm bảo vệ khi tôi nói tôi làm security. Ngoài ra có lẽ là do thị trường việc làm an toàn thông tin ở Việt Nam không phong phú nên hầu hết đều nghĩ rằng làm an toàn thông tin nghĩa là đảm bảo an toàn hệ thống mạng (network/system security), trong khi thực tế đây chỉ là một trong số rất nhiều công việc trong ngành.\nTrong bốn phần nhỏ tiếp theo, tôi sẽ giới thiệu bốn nhóm công việc chính trong ngành. Đối với mỗi nhóm công việc, tôi sẽ bàn một chút về triển vọng nghề nghiệp ở Việt Nam và Mỹ, hai nơi mà tôi có dịp được quan sát. Nếu bạn không biết bạn thích làm gì thì cứ chọn một công việc rồi làm thử. Các công việc này đều có liên quan nhau, nên kiến thức mà bạn học được trong quá trình thử vẫn hữu ích cho những nghề khác.\n\n2.1 An toàn sản phẩm (product security)\nCông việc chính của nhóm này là làm việc với các đội phát triển sản phẩm để đảm bảo sản phẩm làm ra an toàn cho người dùng và an toàn cho hệ thống của công ty, cụ thể là:\n\n  Kiểm định mã nguồn và thiết kế của sản phẩm\n  Phát triển các giải pháp kỹ thuật và quy trình phát triển phần mềm an toàn để phát hiện và ngăn chặn những kỹ thuật tấn công đã biết\n  Đào tạo nhân lực để nâng cao nhận thức về an toàn thông tin cũng như kỹ năng viết mã an toàn\n  Nghiên cứu các hướng tấn công mới có thể ảnh hưởng hệ thống sản phẩm và dịch vụ của công ty\n\n\nTóm gọn lại thì nhóm này chuyên tìm lỗ hổng và kỹ thuật tấn công mới. Đây là công việc của tôi và tôi thấy đây là công việc thú vị nhất trong ngành :-).\nỞ Mỹ thì thông thường thì chỉ có các hãng có phần mềm và dịch vụ lớn như Facebook, Google, Microsoft, Oracle, v.v. hay các tập đoàn tài chính ngân hàng lớn mới có đội ngũ tại chỗ để đảm nhiệm công việc này. Các công ty nhỏ thường chỉ thuê dịch vụ của các công ty tư vấn. IBM và Big Four đều có cung cấp dịch vụ tư vấn này. Dẫu vậy nếu được chọn lựa thì tôi sẽ chọn làm cho các công ty chuyên sâu như Matasano, iSec, Leviathan, Gotham, IOActive, Immunity, v.v.\nỞ Việt Nam thì thị trường việc làm cho người làm an toàn sản phẩm có vẻ ảm đạm hơn. Cho đến nay tôi biết chỉ có một vài công ty ở Việt Nam là có nhân viên chuyên trách lĩnh vực này. Các công ty khác (nếu có quan tâm đến an toàn thông tin) thì hầu như chỉ tập trung vào an toàn vận hành. Các công ty tư vấn an toàn thông tin ở Việt Nam cũng không tư vấn an toàn sản phẩm, mà chỉ tập trung tư vấn chung chung về các quy trình và tiêu chuẩn an toàn thông tin.2.2 An toàn vận hành (operations security)\nCông việc chính của nhóm này là đảm bảo sự an toàn cho toàn bộ hệ thống thông tin của doanh nghiệp, với ba nhiệm vụ chính:\n\n  Ngăn chặn: đưa ra các chính sách, quy định, hướng dẫn về an toàn vận hành; kiện toàn toàn bộ hệ thống thông tin, từ các vành đai cho đến máy tính của người dùng cuối; cấp và thu hồi quyền truy cập hệ thống; quét tìm lỗ hổng trong hệ thống, theo dõi thông tin lỗ hổng mới và làm việc với các bên liên quan để vá lỗi, v.v.\n\n\n  Theo dõi và phát hiện: giám sát an ninh mạng.\n\n\n  Xử lý: phản hồi (incident response) và điều tra số (digital forensics) khi xảy ra sự cố an toàn thông tin, từ tài khoản của nhân viên bị đánh cắp, rò rỉ thông tin sản phẩm mới cho đến tấn công từ chối dịch vụ.Đây là công việc khó nhất, nhưng lại ít phần thưởng nhất của ngành an toàn thông tin.\n\nTương tự như trên, chỉ có các hãng lớn của Mỹ mới có đội ngũ tại chỗ để phụ trách toàn bộ khối lượng công việc đồ sộ này, nhất là mảng xử lý và điều tra. Đa số các công ty chỉ tập trung vào ngăn chặn và sử dụng dịch vụ của bên thứ ba cho hai mảng còn lại. Các hãng như Mandiant, Netwitness hay HBGary cung cấp dịch vụ điều tra các vụ xâm nhập và có rất nhiều hãng khác cung cấp dịch vụ giám sát an ninh mạng.\nỞ Việt Nam thì thị trường việc làm cho người làm an toàn vận hành tương đối phong phú hơn so với an toàn sản phẩm. Các công ty và tổ chức tài chính lớn đều có một vài vị trí chuyên trách về an toàn vận hành. Đa số người làm về an toàn thông tin ở Việt Nam mà tôi biết là làm trong lĩnh vực này. Dẫu vậy hầu như chưa có ai và công ty tư vấn nào làm về phản hồi và điều tra sự cố.\n\n2.3 Phát triển công cụ (applied security)\nCông việc chính của nhóm này là phát triển và cung cấp các công cụ, dịch vụ và thư viện phần mềm có liên quan đến an toàn thông tin cho các nhóm phát triển sản phẩm sử dụng lại.\nNhóm này bao gồm các kỹ sư nhiều năm kinh nghiệm và có kiến thức vững chắc về an toàn thông tin, viết mã an toàn và mật mã học. Họ phát triển các thư viện và dịch vụ dùng chung như phân tích mã tĩnh - phân tích mã động (static - dynamic code analysis), hộp cát (sandboxing), xác thực (authentication), kiểm soát truy cập (authorization), mã hóa (encryption) và quản lý khóa (key management), v.v.\nĐây là dạng công việc dành cho những ai đang viết phần mềm chuyên nghiệp và muốn chuyển qua làm về an toàn thông tin. Đây cũng là công việc của những người thích làm an toàn sản phẩm nhưng muốn tập trung vào việc xây dựng sản phẩm hơn là tìm lỗ hổng.\nRõ ràng loại công việc này chỉ xuất hiện ở các công ty phần mềm lớn. Ở các công ty phần mềm nhỏ hơn thì các kỹ sư phần mềm thường phải tự cáng đáng công việc này mà ít có sự hỗ trợ từ nguồn nào khác. Ở Việt Nam thì tôi không biết có ai làm dạng công việc này không.\n\n2.4 Tìm diệt mã độc và các nguy cơ khác (threat analysis)\n\nNgoài an toàn sản phẩm ra thì đây là một lĩnh vực mà tôi muốn làm. Công việc chính của nhóm này là phân tích, truy tìm nguồn gốc và tiêu diệt tận gốc mã độc và các tấn công có chủ đích (targeted attack). Mã độc ở đây có thể là virút, sâu máy tính, hay mã khai thác các lỗ hổng đã biết hoặc chưa được biết đến mà phần mềm diệt virút thông thường chưa phát hiện được. Các loại mã độc này thường được sử dụng trong các tấn công có chủ đích vào doanh nghiệp.\nTôi nghĩ rằng sau hàng loạt vụ tấn công vừa rồi thì chắc hẳn các công ty lớn với nhiều tài sản trí tuệ giá trị đều muốn có những chuyên gia trong lĩnh vực này trong đội ngũ của họ. Ngoài ra các công ty chuyên về điều tra và xử lý sự cố như Mandiant, HBGary hay Netwitness mà tôi đề cập ở trên đều đang ăn nên làm ra và lúc nào cũng cần người. Các công ty sản xuất phần mềm diệt virút dĩ nhiên cũng là một lựa chọn.\nỞ Việt Nam thì tôi nghĩ hầu hết doanh nghiệp vẫn chưa thấy được nguy cơ đến từ các cuộc tấn công có chủ đích, thành ra họ sẽ không tuyển người chuyên trách vấn đề này. Tôi cũng không biết có công ty tư vấn nào ở Việt Nam chuyên về điều tra và xử lý sự cố hay không. Tôi nghĩ lựa chọn khả dĩ nhất cho những người thích mảng công việc này là các công ty phần mềm diệt virút.\nTuy nhiên cũng cần lưu ý rằng trong vài năm gần đây ở Việt Nam còn xuất hiện những loại mã độc nhắm vào đông đảo người dùng máy tính bình thường. Vấn nạn này có lẽ sẽ còn kéo dài trong nhiều năm tới và lẽ đương nhiên “phe ta” lúc nào cũng cần thêm những chiến sĩ lành nghề như anh TQN. Thành ra dẫu triển vọng nghề nghiệp không sáng sủa cho lắm, nhưng tôi rất hi vọng sẽ ngày càng nhiều người tham gia vào việc phân tích các mã độc nhắm vào người dùng máy tính ở Việt Nam. Đối với tôi họ là những người hùng thầm lặng, chiến đấu đêm ngày với các “thế lực thù địch” để bảo vệ tất cả chúng ta.\n\n3. Học như thế nào?\n\nĐa số những bạn viết thư cho tôi đều đang học đại học ngành CNTT và tất cả đều than rằng chương trình học quá chán, không có những thứ mà các bạn muốn học. Tôi nghĩ đây là một ngộ nhận.\nHối tiếc lớn thứ nhì trong sự nghiệp học tập mấy chục năm của tôi là đã không học nghiêm túc khi còn là sinh viên (hối tiếc lớn nhất là tôi đã không nghỉ hẳn, nhưng đó là một câu chuyện dài khác). Tôi cũng đã nghĩ rằng chương trình học ở đại học là lạc hậu và không cần thiết. Bây giờ nhìn lại thì tôi thấy nội dung và cách dạy của từng môn học thì đúng là lạc hậu (chỉ có mấy môn triết học Mác-Lênin là bắt kịp ánh sáng thời đại), nhưng toàn bộ giáo trình đại học vẫn cung cấp được một cái sườn kiến thức rất cần thiết cho một kỹ sư an toàn thông tin.\nỞ đại học người ta có cách tiếp cận top-down, nghĩa là dạy từ đầu đến cuối những kiến thức nằm trong chương trình. Điều này dễ dẫn đến tình trạng là người học phải học những kiến thức mà họ không thấy cần thiết. Nếu chương trình học cũ kỹ và không có nhiều thực hành, hoặc người dạy không chỉ ra được bức tranh toàn cảnh, vị trí hiện tại của người học và bước tiếp theo họ nên làm là gì thì người học sẽ dễ cảm thấy rằng họ đang phí thời gian học những kiến thức vô bổ.\nTrong khi khi đi làm thì cách tiếp cận là bottom-up, nghĩa là lao vào làm, thấy thiếu kiến thức chỗ nào thì học để bù vào chỗ đó. Lúc này tôi hoàn toàn chủ động trong việc học và tôi cũng hiểu rõ tôi cần học cái gì và tại sao. Điều thú vị là mỗi khi truy ngược lại nguồn gốc của những kiến thức tôi cần phải có, tôi thường thấy chúng nằm trong chương trình đại học.\nVí dụ như tôi muốn luyện kỹ năng dịch ngược mã phần mềm (reverse code engineering - RCE) thì tôi thấy rằng tôi cần phải có kiến thức về tổ chức và cấu trúc máy tính. Hoặc nếu tôi muốn học về mật mã học thì tôi phải học lý thuyết tính toán, mà khởi nguồn là lý thuyết automata. Nhưng tại sao trước đó tôi cũng đi làm nhưng không thấy được những lỗ hổng kiến thức này? Tôi nghĩ là do tôi làm không đủ sâu. Ví dụ như nếu bạn suốt ngày chỉ lập trình PHP thì bạn sẽ không thể hiểu được tại sao phải nắm vững tổ chức và kiến trúc máy tính. Hoặc giả như công việc của bạn là sysadmin thì cũng sẽ rất khó để bạn thấy được tại sao cần phải học lý thuyết automata.\nNhững gì tôi nói lan man ở trên có thể tóm gọn lại thế này:\n\n\n  Học dựa theo chương trình đại học. Nếu bạn đang học đại học các ngành công nghệ thông tin, khoa học máy tính hay toán tin thì nên tập trung vào việc học các môn trong trường. Các học liệu trong phần 4 cũng được soạn theo các đại học lớn trên thế giới.\n  Học kiến thức căn bản thật vững (cái gì là căn bản thì xem phần 4), những món còn lại khi nào cần (căn cứ vào nhu cầu công việc) thì hẵng học.\n  Tìm dự án lề (side project) mà bạn thích để làm để có thể nhanh chóng nhận ra những mảng kiến thức còn thiếu.\n  Thời điểm tốt nhất để học một cái gì đó là khi bạn đang là sinh viên. Thời điểm tốt thứ hai là ngay bây giờ!\n\n\nCác lớp mà tôi liệt kê trong phần 4 đa số là của đại học Stanford. Bạn không cần phải đến tận nơi, ngồi trong lớp mới có thể học được. Tôi thấy trong nhiều trường hợp thì bạn chỉ cần đọc lecture notes, sách giáo khoa mà lớp sử dụng rồi làm bài tập đầy đủ thì vẫn sẽ tiếp thu đủ kiến thức. Một số lớp mà tôi liệt kê dưới đây được dạy miễn phí rộng rãi trên Coursera.\nBạn có thể tham khảo chương trình SCPD nếu muốn học chung với các sinh viên Stanford khác. Đây là chương trình học từ xa thông qua video. Buổi sáng lớp diễn ra thì buổi chiều bạn đã có video để xem. Thi cử như các sinh viên chính quy khác và điểm phải trên B mới được học tiếp. Đây là chương trình mà tôi theo học. Điểm thú vị là mỗi học kỳ bạn chỉ cần lấy một lớp, nhưng Stanford vẫn sẽ cho bạn xem video của tất cả các lớp khác.\nNgoài Stanford và Coursera ra, bạn cũng có thể tham khảo các lớp trên Udacity, OCW và MITx. Khi tôi đang viết những dòng này thì MIT và Harvard công bố dự án edX. Chúng ta đang sống trong một thời đại cực kỳ thú vị! Bây giờ chỉ cần bạn chịu học thì muốn học cái gì cũng có lớp và học liệu miễn phí. Nhưng mà học cái gì bây giờ?\n\n4. Học cái gì?\n\nCó ba món quan trọng cần phải học: lập trình, lập trình và lập trình! Để làm việc được trong ngành này, bạn phải yêu thích lập trình. Không có cách nào khác. Thề luôn!\nTôi dành khá nhiều thời gian tìm hiểu giáo trình khoa học máy tính của các trường đại học lớn trên thế giới và tôi thấy tất cả các môn học đều có phần bài tập là lập trình. Học cái gì viết phần mềm cho cái đó. Học về hệ điều hành thì phần bài tập là viết một hệ điều hành. Học về mạng thì viết phần mềm giả lập router, switch hay firewall. Cá nhân tôi cũng thấy rằng lập trình là cách tốt nhất để tiếp thu kiến thức một môn học nào đó, biến nó thành của mình. Nói cách khác, lập trình là một cách mã hóa tri thức khá hiệu quả.\nNgoài ra nhìn vào mô tả công việc ở phần 2, bạn cũng có thể thấy kỹ năng lập trình quan trọng đến dường nào, bởi hầu hết các vấn đề và giải pháp của an toàn thông tin là đến từ phần mềm. Rõ ràng muốn tìm lỗi của phần mềm thì bạn phải hiểu được phần mềm thông qua mã nguồn trực tiếp hay trung gian của nó. Rất có thể bạn sẽ không phải lập trình hàng ngày, nhưng bạn phải viết được những công cụ nhỏ hay những thư viện hỗ trợ cho công việc và các lập trình viên khác.\nVậy làm thế nào để lập trình giỏi? Câu hỏi này làm tôi nhớ đến câu chuyện cười về ông lập trình viên không thể ra khỏi phòng tắm vì trên chai dầu gội có ghi hướng dẫn sử dụng là “cho vào tay, xoa lên đầu, xả nước và lập lại”. Từ khóa trong câu chuyện này là “lập lại”: muốn giỏi lập trình thì cách tốt nhất là lập trình nhiều vô!\nNhưng mà lập trình bằng ngôn ngữ gì bây giờ? Đây là câu hỏi dễ làm cho các lập trình viên oánh nhau nhất ;-). Cá nhân tôi thấy rằng người làm an toàn thông tin bây giờ cần phải thông thạo C, x86 Assembly, Python (hoặc Ruby) và JavaScript. Tôi có nói lý do tại sao trong phần giới thiệu sách tiếp theo.\n\n4.1 Lập trình\n\n\n  Brian Kernighan, Dennis Ritchie, The C Programming Language (2nd Edition): kinh điển và phải-đọc cho tất cả những ai muốn học C! Linus Torvalds từng nói rằng “[…] all right-thinking people know that (a) K&amp;R are _right_ and (b) K&amp;R are right”. Tôi đã từng rất sợ C (vì nghĩ nó phức tạp), và cuốn này giúp tôi không còn sợ nữa.\n\n\n  Randal Bryant, David O’Hallaron, Computer Systems: A Programmer’s Perspective: cuốn này được dùng cho lớp CS107. Đọc cuốn này và làm bài tập của lớp CS107 sẽ rèn cho bạn kỹ năng lập trình C và x86 Assembly. Sau khi đọc cuốn này, bạn sẽ biết tại sao có lỗi tràn bộ đệm và cách khai thác chúng. Tôi rất thích các chương nói về x86 và sự liên kết giữa các công cụ như preprocessor, compiler và linker.\n\n\n  David Hanson, C Interfaces and Implementations: muốn mau “lên cơ” bida thì phải thường xuyên xem người khác chơi để mà học “đường” mới. Tương tự, muốn giỏi lập trình thì phải thường xuyên đọc mã của những cao thủ. David Hanson là một cao thủ C và cuốn sách này sẽ chỉ cho bạn nhiều “đường” mới trong việc sử dụng C. Tôi thích các bài tập của cuốn sách này. Tôi nghĩ chỉ cần luyện các bài này là đủ để trở thành một lập trình viên C hạng lông.\n\n\n  Justin Seitz, Gray Hat Python: Python Programming for Hackers and Reverse Engineers: cuốn này sẽ giúp bạn sử dụng Python để viết những công cụ nho nhỏ mà bất kỳ ai làm an toàn thông tin cũng sẽ phải viết một vài lần trong đời.\n\n\n  Douglas Crockford, JavaScript: The Good Parts: JavaScript là ngôn ngữ thống trị WWW. Nếu bạn muốn làm an toàn (ứng dụng và trình duyệt) web thì bắt buộc phải thành thạo ngôn ngữ. Cuốn sách rất mỏng này của tác giả JSON giới thiệu đầy đủ những vấn đề mà người làm an toàn ứng dụng cần phải biết về JavaScript. Cuốn này có thể dùng làm sách giáo khoa thay cho cuốn “Javascript: The Definitive Guide” trong lớp CS142 (xem bên dưới). Đọc cuốn này tôi mới hiểu closure là gì và bản chất prototypal của JavaScript.\n\n\n  Sẽ đọc: những cuốn được giới thiệu ở đây.\n\n\n4.2 Hệ điều hành\n\n\n  Abraham Silberschatz, Peter Galvin, and Greg Gagne, Operating System Concepts, 8th Edition Update: cuốn này là giáo trình của lớp CS140. Tôi nghĩ không cần đọc cuốn này, chỉ cần đọc notes và làm bài tập (viết các phần khác nhau của một hệ điều hành!) là đủ. Đây là một lớp nặng. Tôi theo đuổi lớp CS140 này giữa chừng thì phải dừng lại do không có đủ thời gian.\n\n\n  Intel Software Developer Manuals: tôi thấy nên đọc tài liệu của 80386 trước, rồi sau đó hẵng đọc tài liệu của các CPU mới hơn.\n\n\n  Red Hat, Introduction to System Administration: tôi rất thích chương nói về “philosophy of sysadmin” của cuốn này và tôi nghĩ kỹ năng quản trị hệ thống là cực kỳ cần thiết khi muốn nghiên cứu các kỹ thuật tấn công/phòng thủ mới. Không thể làm an toàn vận hành nếu không có kỹ năng quản trị hệ thống.\n\n\n4.3 Mạng máy tính\n\n\n  Richard Stevens, TCP/IP Illustrated Vol I: cuốn sách này quá nổi tiếng rồi nên tôi nghĩ không cần phải giới thiệu. Tôi chưa đọc Vol II, III nhưng nhất định sẽ tìm đọc trong thời gian tới. Lớp CS144 dùng một cuốn sách khác. Tôi chưa học lớp này, nhưng tôi thấy bài tập của họ khá thú vị.\n\n\n  Stephen Northcutt, Lenny Zeltser, Scott Winters, Karen Kent, Ronald W. Ritchey, Inside Network Perimeter Security, 2nd Edition: tôi thích cuốn này vì nó viết rất dễ hiểu về các vấn đề  và công cụ thường gặp trong an toàn mạng.\n\n\n  Sẽ đọc: Fyodor, Nmap Network Scanning.\n\n\nSau khi đã có những kiến thức cơ bản ở trên, bạn có thể theo đuổi lớp CS155. Lớp này có trên Coursera với tên Computer Security. Song song với lớp CS155, bạn có thể tìm đọc các sách sau:\n\n4.4 Tìm lỗi phầm mềm\n\n\n  Mark Dowd, John McDonald, Justin Schuh, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities: Kinh điển và phải-đọc! Cuốn này là kinh thánh của lĩnh vực an ninh ứng dụng. Tôi thích nhất phần nói về tràn số nguyên và những vấn đề của ngôn ngữ C trong cuốn này.\n\n\n  Dafydd Stuttard, Marcus Pinto, The Web Application Hacker’s Handbook: Discovering and Exploiting Security Flaws: cuốn này tập trung vào ứng dụng web. Tôi không đọc cuốn này kỹ lắm, mà chỉ thường dùng nó để tham khảo. Dẫu vậy tôi nghĩ nó là một cuốn giới thiệu tốt cho những ai mới bắt đầu.\n\n\n  Michal Zalewski, The Tangled Web: cuốn này mới xuất bản gần đây nhưng đã ngay lập tức trở thành kinh điển! Cuốn này đúc kết quá trình nghiên cứu về an ninh web trong vài năm trời của một trong những hacker xuất sắc nhất thế giới. Tôi nghĩ chỉ cần đọc cuốn này là bạn đã có thể bắt đầu tìm lỗ kiếm tiền được rồi. Cuốn này và cuốn ở trên được dùng làm sách giáo khoa của lớp CS142.\n\n\n  Sẽ đọc: Tobias Klein, A Bug Hunter’s Diary: A Guided Tour Through the Wilds of Software Security\n\n\n4.5 Dịch ngược mã phần mềm\n\n\n  Eldad Eilam, Reversing: Secrets of Reverse Engineering: mặc dù có rất nhiều người viết về RCE nhưng tôi thấy đây là cuốn duy nhất hệ thống hóa được các bước quan trọng cần phải làm khi cần dịch ngược mã của một tệp chương trình nào đó.\n\n\n  Chris Eagle, The IDA Pro Book: The Unofficial Guide to the World’s Most Popular Disassembler: IDA Pro là công cụ tốt nhất để làm RCE và đây là cuốn sách tốt nhất về IDA Pro. Nắm vững C và x86 Assembly thì chỉ cần đọc cuốn này là bạn có thể bắt đầu RCE các phần mềm phức tạp.\n\n\n  \n    Tham khảo các tài liệu về dịch ngược mã phần mềm của lớp PenTest của đại học NYU.\n  \n  \n    Sẽ đọc: Michael Sikorski, Andrew Honig, Practical Malware Analysis: The Hands-On Guide to Dissecting Malicious Software\n  \n\n\n4.6 Điều tra số (digital forensics)\n\n\n  Brian Carrier, File System Forensic Analysis: Brian Carrier là tác giả của bộ công cụ forensic nổi tiếng The Sleuth Kit. Cuốn này đã giúp tôi “khai quật” được một đoạn video bị xóa lưu trong một máy camera quay lén các máy ATM.\n\n\n  Sẽ đọc: Cory Altheide, Harlan Carvey, Digital Forensics with Open Source Tools\n\n\n4.7 Mật mã hóa\n\n\n  Niels Ferguson, Bruce Schneier, Practical Cryptography: tôi có nhiều kỷ niệm đẹp với cuốn này ;-). Hầu hết các kết quả làm việc của tôi trong vài năm vừa rồi là nhờ vào việc đọc cuốn này. Tôi chép lại đây giới thiệu rất hay của một người bạn: “The best security books, you can read “inside out”, taking any recommendation on what to do and looking for people to do the opposite to find flaws. “Firewalls and Internet Security” was like that. So was “Practical Unix Security”, and so is TOASSA. This is that book for crypto. It’s also the one book on crypto you should allow yourself to read until you start actually finding crypto flaws.”\n\n\n  Jonathan Katz, Yehuda Lindell, Introduction to Modern Cryptography: Principles and Protocols: đây là sách giáo khoa của lớp CS255. Lớp này là lớp Cryptography trên Coursera.\n\nChú ý đây là những cuốn sách tập trung vào công việc hàng ngày và sở thích của tôi – nói cách khác, còn thiếu nhiều sách của các mảng công việc khác. Dẫu vậy tôi nghĩ những cuốn sách này sẽ giúp bạn có được một kiến thức nền tảng vững chắc để từ đó theo đuổi các nghề nghiệp khác nhau trong ngành an toàn thông tin. Trong thời gian tới tôi sẽ cập nhật thêm những cuốn sách mà tôi đang và sẽ đọc. Nếu bạn biết sách nào hay thì hãy giới thiệu cho tôi.\nNgoài ra trong các sách mà tôi vừa liệt kê không có cuốn sách toán (và lý thuyết khoa học máy tính) nào cả. Tôi nghĩ bạn sẽ tự có câu trả lời cho câu hỏi “Có nên học toán hay không?” khi bắt đầu học mật mã. Về hai mảng này thì tôi rất thích lớp “Great Ideas in Theoretical Computer Science” của Scott Aaronson và cuốn “A Computational Introduction to Number Theory and Algebra” của Victor Shoup. Thích đến nỗi tôi phải viết đoạn này chỉ để nhắc đến chúng ;-). Tôi cũng đã từng dành ra nhiều tháng để đánh vật với Introduction to the Theory of Computation của Michael Sipser. Nhưng thôi, tôi không muốn giới thiệu sách toán nữa vì tôi rất dốt món này!\n\n5. Bắt đầu nói nhảm và hết\n\nPhew! Không ngờ là tôi cũng viết được cho đến đây (hi vọng là bạn vẫn đang đọc!). Tôi định viết dông dài về thái độ học tập này nọ, nhưng thôi bài đã dài và nhiều thông tin rồi, nên tôi chỉ nói ngắn gọn thế này:\nCái mà tôi vừa “vẽ” ra là một con đường. Thú thật là tôi không biết đích đến của nó là gì – tôi chỉ biết rằng hành trình mà tôi đã đi qua (và hi vọng là những chặng đường sắp tới) đã mang đến cho tôi rất nhiều niềm vui – niềm vui của một con người đi khám phá thế giới, chinh phục những thử thách, để rồi chia sẻ những câu chuyện hay ho với tất cả mọi người.\nMỗi ngày tôi đều dành thời gian đọc sách, làm bài tập, viết mã hoặc chứng minh một cái gì đó. Không ai bắt tôi phải làm những chuyện đó. Có những thứ tôi học cũng không (hoặc chưa) có liên quan gì đến công việc. Tôi học chỉ vì tôi thích và tò mò. Tôi học vì tôi muốn hiểu thêm những thứ mà tôi cho là hay ho. Tôi học vì tôi muốn đi mãi, đi mãi, đi đến tận cùng những cái mà người ta viết trong sách, để xem ở đó có gì hay không.\nHôm rồi tôi đọc một mẩu chuyện về Richard Feynman, trong đó có đoạn kể về lúc Feynman bị bệnh gần đất xa trời, ông tâm sự rằng, “[I’m going to die but I’m not as sad as you think because] when you get as old as I am, you start to realize that you’ve told most of the good stuff you know to other people anyway”. Đương nhiên những gì tôi biết làm sao mà “good” bằng những gì Feynman biết, nhưng dẫu sao thì tôi cũng sẽ học theo Feynman: có biết chuyện gì hay ho thì kể cho nhiều người khác cùng biết. Bài này là một chuyện như thế.\nHappy hacking!\n(cảm ơn đại ca M. đã đọc và sửa bản nháp của bài này)\n\n",
  id: 2
});
index.addDoc({
  title: "Học Khoa Học Máy Tính nên đọc sách gì",
  author: null,
  layout: "post",
  content: "\n\nBài viết gốc - Blog Khoa Học Máy Tính\n\nBạn trantempo hỏi một danh sách các sách nên đọc trong KHMT. Bạn Nguyên đã đưa một danh sách sơ bộ. Tôi sẽ cập nhật từ từ vào danh sách dưới đây trong một vài tuần tới để có một danh sách hoàn tất hơn. (Cần về nhà duyệt lại tủ sách). Các bạn có thể bình luận và thêm vào các quyển sách mà bạn ưa thích.\n\n1. Phân tích và thiết kế thuật toán (cơ bản)\nHiện nay có 3 quyển textbooks được dùng khá phổ biến, trong đó tôi thích quyển của Kleinberg và Tardos nhất. Tuy nhiên, từ quan điểm cá nhân thì tôi chưa thấy hài lòng với cả 3 vì các lý do khác nhau, mặc dù cả ba quyển đều rất tốt.\n\n\n  Thomas H. Cormen, Charles E. Leiserson, Ronald Rivest, and Clifford Stein, Introduction to Algorithms (2e), 1180pp, ISBN: 0262032937, MIT Press, September 2001.\n  Jon Kleinberg, Éva Tardos, Algorithm Design, 864 pages, Addison Wesley, ISBN-10: 0321295358, ISBN-13: 978-0321295354, March 16, 2005.\n  S. Dasgupta, C.H. Papadimitriou, and U.V. Vazirani, Algorithms, McGraw Hill, 2007.\n\n\nHồi trước có quyển của Aho-Hopcroft-Ullman. Bây giờ đã khá lỗi thời, ít ai dùng.\n\n\n  Alfred V. Aho John E. Hopcroft Jeffrey Ullman, Data Structures and Algorithms, 427pp. ISBN: 0201000237, Addison Wesley, January 1983.\n\n\nTiếc rằng Robert Tarjan không viết sách giáo khoa, nếu không sách về data structure của ông hẳn phải rất hay.\n\nHiện nay không thể dạy thuật toán cơ bản mà không dạy về NP-Completeness và các phương pháp xác suất. Do đó, các quyển sau đây cũng rất cần thiết:\n\n\n  Michael R. Garey and David S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, 338pp. ISBN: 0716710455, W. H. Freeman Company, November 1990.\n  Michael Mitzenmacher and Eli Upfal, Probability and Computing: Randomized Algorithms and Probabilistic Analysis, Cambridge University Press (January 31, 2005)\n\n\nTôi xếp 3 tập của Knuth vào dạng “cao cấp hơn”, trong trường hợp bạn đang thắc mắc. Về lecture notes (dạng presentation) thì tôi thấy notes của … tôi khá tốt 🙂 (từ từ đến cuối học kỳ sẽ có toàn bộ notes.)\n\n2. Phân tích và thiết kế thuật toán (cao cấp hơn)\n\nKhi nói đến phân tích và thiết kế thuật toán cao cấp, ta thường phải xem xét các đề tài cụ thể để giới thiệu. Các quyển sách cao cấp thường được viết về một đề tài nào đó: approximation algorithms, randomized algorithms, linear programming, convex programming, approximate counting, combinatorial optimization, network flows, algorithmic game theory, vân vân. Tôi sẽ gộp chung chúng lại và giới thiệu một vài quyển tiêu biểu.\n\n\n  Donald Knuth, The Art of Computer Programming Volumes 1, 2, 3, Addison Wesley.\n  Vijay Vazirani, Approximation Algorithms, Springer-Verlag, 397 pages hardcover, ISBN: 3-540-65367-8, published 2001.\n  Rajeev Motwani and Prabhakar Raghavan, Randomized Algorithms, 492 pages, Cambridge University Press (August 25, 1995), ISBN: 0521474655\n  Vašek Chvátal, Linear Programming, W. H. Freeman, 1983; 478pp. ISBN: 0716715872, W. H. Freeman Company, January 1983.\n  Dorit Hochbaum (Editor), Approximation Algorithms for NP-Hard Problems, 624 pages ; Brooks/Cole Pub Co; ISBN: 0534949681; 1st edition (July 26, 1996)\n  Alexander Schrijver, Theory of Linear and Integer Programming, 484pp. ISBN: 0471982326, Wiley, John &amp; Sons, Incorporated, June 1998.\n  Christos H. Papadimitriou and Kenneth Steiglitz, Combinatorial Optimization: Algorithms and Complexity, Dover Publications; Unabridged edition (January 29, 1998).\n  Mark Jerrum, Counting, Sampling and Integrating: Algorithms and Complexity (Lectures in Mathematics. ETH Zürich), Birkhäuser Basel; 1 edition (April 28, 2003)\n  Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin, Network Flows: Theory, Algorithms, and Applications, Hardcover, 1st ed., 846pp., ISBN: 013617549X, Prentice Hall, February 1993.\n  Noam Nisan, Tim Roughgarden, Eva Tardos, and Vijay V. Vazirani (editors), Algorithmic Game Theory, Cambridge University Press, 2007.\n  Mark de Berg, M. van Krefeld, M. Overmars, and O. Schwarzkopf, Computational Geometry: Algorithms and Applications, Second Edition, Springer; 2nd rev. ed. edition (February 18, 2000).\n\n\nĐây là tôi hoàn toàn chưa đụng tới rất nhiều các đề tài quan trọng khác: algorithmic number theory, algorithmic coding theory, computational biology, v.v.\n\nChú ý: Ngoài ra, không thể nghiên cứu thuật toán hiện đại mà không có hiểu biết sâu sắc về lý thuyết độ phức tạp (computational complexity theory), lý thuyết đồ thị và toán rời rạc, lý thuyết xác suất và lý thuyết thông tin, toán tối ưu và toán ứng dụng, thậm chí cả hình học và giải tích cơ bản (cần cho computational geometry), hay lý thuyết số (cần cho các thuật toán cryptography). Tôi sẽ giới thiệu vài quyển về các đề tài này trong vài ngày tới.\n\n3. Combinatorics\n(bao gồm lý thuyết đồ thị và toán rời rạc). Combinatorics rất rộng, liên quan mật thiết đến rất nhiều nhánh khác nhau của toán học và khoa học máy tính. Dưới đây tôi chỉ liệt kê một sanh sách các sách tôi đã đọc và thấy hữu dụng trong nghiên cứu và trong phát triển tư duy toán học cho KHMT. Nghĩa là không kể những thứ hữu dụng mà tôi không biết gì cả như Additive Combinatorics của bác Terry Tao và bác Vũ Hà Văn.\n\n3.1 Toán rời rạc phổ thông\nHiển nhiên sinh viên học KHMT phải biết toán rời rạc. Tuy nhiên, tôi cực kỳ khó chịu với loại toán rời rạc thường được dạy ở bậc đại học nói chung, vì hai lý do: (1) lớp toán rời rạc kiểu này không chuẩn bị đủ kiến thức cho sinh viên học thêm lên, (2) và nó cho sinh viên một bức tranh bèm nhèm về toán rời rạc, dễ làm sinh viên hiểu không đúng về tầm mức của toán rời rạc. Dĩ nhiên tôi hiểu rằng chương trình đại học thì có giới hạn, còn bể kiến thức thì vô cùng, do đó cái “khó chịu” này của tôi không có cơ sở, Chỉ nhân đây càm ràm để “xả stress” là chính.\n\nCó bốn quyển sách “phải đọc” về toán rời rạc cho sinh viên học KHMT (và cả sinh viên toán):\n\n\n  J. H. van Lint and R. M. Wilson, A Course in Combinatorics, Cambridge University Press; 2nd edition (December 15, 2001). Rất tuyệt vời! Mỗi chương là một đề tài riêng biệt, từ đồ thị đến generating functions, từ design theory đến coding theory, từ q-series đến extremal set theory, v.v. đều có cả. Đa số các bài tập đều không tầm thường. Nếu bạn muốn biết combinatorics thật sự là gì, mà không có thời gian đọc nhiều quá, thì quyển này là bắt buộc!\n  Ronald L. Graham, Donald E. Knuth, Oren Patashnik, Concrete Mathematics: A Foundation for Computer Science, Addison-Wesley Professional. Viết bởi computer scientists cho computer scientists. Tất cả những thứ sinh viên KHMT cần biết về asymptotic analysis. Kiểu Knuth. Nghĩa là cực kỳ cụ thể và chi tiết về phương pháp. Dĩ nhiên, phạm vi của quyển này rất hẹp, vì đề tài và đối tượng rất cụ thể.\n  Laszlo Lovasz, Combinatorial Problems and Exercises, American Mathematical Society; 2 edition (June 26, 2007). Vừa ra 2nd edition. Cách duy nhất để học toán rời rạc là làm thật nhiều bài tập. Bạn hoàn toàn có thể trở thành một chuyên gia hạng ruồi về graph theory và extremal set theory bằng cách ngồi giải bài tập trong sách này. Nếu bạn đang lấy lớp combinatorics nào đó, nhiều khả năng là thầy của bạn lấy một vài bài tập trong này ra làm bài tập về nhà hoặc cả bài kiểm tra.\n  Martin Aigner, Günter M. Ziegler, and K.H. Hofmann, Proofs from THE BOOK, Springer; 3rd ed. edition (November 13, 2003). Tôi không biết là quyển này đã ra đến 3rd edition, tôi chỉ có 1st edition. Nói đúng ra, quyển này không phải viết về toán rời rạc. Nhưng tư tưởng của nó lại rất tương đồng với tư tưởng của toán rời rạc mà tôi cảm nhận. Khi thấy một chứng minh đẹp như mơ, Erdos hay nói rằng “chứng minh này chắc là phải nằm trong một quyển sách của thượng đế, quyển sách chứa các chứng minh đẹp nhất”. Đó là tư tưởng chính của quyển sách. Nó chứa một bộ sưu tập các chứng minh đẹp như mơ. Dân yêu toán, ai lại không mơ?\n\n\n3.2 Lý thuyết đồ thị\n(bao gồm cả algebraic graph theory). Không có nhánh nào của KHMT mà lại không cần kiến thức cơ bản về lý thuyết đồ thị. Sách mở đầu của lý thuyết đồ thị thì có cực kỳ nhiều. Tôi vẫn thường giới thiệu quyển của West cho sinh viên vì thấy nó vừa phải và phù hợp với dân máy tính. Quyển bài tập của Lovasz ở trên có vài chương về lý thuyết đồ thị rất hay. Tôi quan tâm đến algebraic graph theory nó là công cụ chính để phân tích các expander graphs (dùng cực kỳ nhiều trong complexity theory, algorithm design, randomized algorithms, coding theory, networking, v.v.)\n\n\n  Douglas West, Introduction to Graph Theory, Prentice Hall; 3 edition (December 1, 2007). Tôi thấy phạm vi đề tài của quyển này rất thích hợp cho dân học KHMT, lại rõ ràng dễ hiểu. Sau khi đọc xong một quyển giới thiệu ngành như quyển này, các quyển kế tiếp đều phải đọc theo đề tài, như algebraic graph theory, extremal graph theory, graph coloring, matching theory, v.v.\n  Tommy R. Jensen and Bjarne Toft, Graph Coloring Problems, Wiley-Interscience; 1st edition (December 1994). Đây là tham khảo kinh điển về các bài toán tô màu đồ thị, dùng cực nhiều trong KHMT.\n  L. Lovász and M.D. Plummer, Matching Theory, Annals of Discrete Mathematics, 29, North-Holland Mathematics Studies, 121. Tôi tin rằng dân làm về graph theory và combinatorial optimization đều … bí mật đọc quyển này 🙂 Một đề tài rất đẹp và rất khó tìm thấy ở sách khác là về các Pfaffian và Permanent. Đặc biệt là về matching trên bipartite graphs thì tất cả những thứ tôi biết đều học từ quyển này ra, và đã dùng kiến thức học được trong ít nhất 5 bài báo!\n  Norman Biggs, Algebraic Graph Theory, Cambridge University Press. Quyển sách be bé này giới thiệu algebraic graph theory rất tốt. Đủ để dùng làm nhiều thứ, bao gồm hiểu các thứ liên quan đến expanders.\n  Dragos M. Cvetkovic, Michael Doob, Horst Sachs, Spectra of Graphs: Theory and Applications, Academic Press; 3rd Revised edition (August 1, 1997). Đây là sách tham khảo chính về algebraic graph theory.\n  Fan Chung, Spectral Graph Theory, American Mathematical Society (May 1997). Sách viết rất tốt và rõ ràng. Cái dở duy nhất là bà Fan Chung lại chọn bộ Lapacian eigenvalues thay vì bộ eigenvalues của đồ thị như trong các applications thường dùng. Chuyển qua chuyển lại các kết quả rất mất thời gian.\n\n\n3.2 Phương pháp xác suất\n(bao gồm random graphs). Phương pháp xác suất là một trong những công cụ chính của theoretical computer science, với ứng dụng ở khắp mọi nơi. Trong complexity theory &amp; algorithms ta dùng phương pháp xác suất phân tích và thiết kế PCP, randomized (approximation) algorithms, derandomization, pseudo-random number generation, v.v. Trong mạng máy tính ta có randomized routing, randomized MAC protocols, blocking analysis of switches and routers, v.v. Trong cơ sở dữ liệu gần đây phát triển mạnh probabilistic databases, v.v.\n\nTôi sẽ giới thiệu sách về xác suất và thống kê trong một đề mục riêng. Phần dưới đây chỉ nói riêng về phương pháp xác suất theo nghĩa của Erdos.\n\n\n  Noga Alon and Joel H. Spencer, The Probabilistic Method, Wiley-Interscience; 2 Sub edition (August 24, 2000). Kinh điển! Không có gì phải bàn.\n  Béla Bollobás, Random Graphs, Cambridge University Press. Lại một quyển kinh điển nữa!\n  Quyển của Mitzenmacher và Upfal đã giới thiệu trong phần giải thuật.\n\n\n3.4  Enumerative combinatorics\n\n\n  Richard Stanley, Enumerative Combinantorics Vol. 1 &amp; 2, Cambridge University Press. Kinh điển! Chứa hầu hết tất cả những thứ mà dân khoa học máy tính cần biết về enumerative combinatorics.\n  Dennis Stanton and Dennis White, Constructive combinatorics, Springer; 1 edition (May 15, 1986). Quyển này có lẽ ít người biết nhưng tôi thấy rất hay cho dân học máy tính. Nó viết về enumerative combinatorics từ góc nhìn thuật toán và bijective proofs. Tôi đã lấy lớp của cả hai vị Dennis. Bác Stanton là người thầy có ảnh hưởng lớn nhất đến triết lý giáo dục của tôi.\n  David M. Bressoud, Proofs and Confirmations: The Story of the Alternating-Sign Matrix Conjecture, Cambridge University Press (August 13, 1999). Quyển này phải nói là trên cả tuyệt vời. Quyển sách nói về một conjecture rất nổi tiếng gọi là Alternating Sign Martrix Conjecture và duyệt lại toàn bộ quá trình người ta “tấn công” conjecture này. Tôi đã từng bỏ 6 tháng vật lộn với nó 🙁 . Kết thúc bằng các công trình của Zeilberger và Kuperberg. Nó tuyệt vời ở chỗ, ngoài việc dùng làm sách giáo khoa cho một vài lớp enumerative combinatorics rất tốt, nó vẽ ra rất rõ ràng quá trình phát triển và phương pháp tư duy của một nhánh toán học dựa trên một câu chuyện cụ thể, một đề tài nghiên cứu cụ thể. Terry Tao có viết một bài hàm chứa ý tưởng tương tự về tính liên thông của các phát triển trong toán. Đến bây giờ mở sách này ra đọc tôi vẫn tìm thấy những cái mới, và cả các bài toán chưa giải được. Enumerative combinatorics là “tình yêu thời niên thiếu” của tôi, và quyển này là quyển tốt nhất giải thích tại sao tôi vẫn còn … day dứt 🙂 (Trong quyển này có nói về một thuật toán tính định thức của tác giả truyện Alice lạc vào xứ thần tiên!)\n  George E. Andrews, The Theory of Partitions, Cambridge University Press (July 28, 1998). George Andrews là người tìm ra những quyển sổ tay mất tích của Ramanujan. Quyển sách của ông nằm giữa giải tích, lý thuyết số, và enumerative combinatorics. Có lẽ định lý hay nhất trong sách là công thức tính tổng số integer partitions của một số nguyên bất kỳ. Đọc sách này ta sẽ thấy generating functions mạnh như thế nào, và được dùng như thế nào trong các vấn đề cực kỳ hóc búa của lý thuyết số. Ngoài ra, nó cũng là quyển sách rất tốt về các hyper-geometric series và q-series. Tuyệt cú mèo! Có một lần tôi nghe George Andrews trình bày ở một hội nghị, ông mang theo một cuộn giấy to oành in một chương trình ông viết từ hồi đầu thập niên 70 để tìm các conjectures trong enumerative combinatorics. Ông kéo cuộn giấy đi từ đầu đến cuối phòng, chưa hết một nửa.\n\n\n3.5 Algebraic combinatorics\nTư tưởng của nhánh này rất gần, theo một nghĩa nhất định, với các phương pháp đại số dùng trong coding theory và complexity theory hiện đại. Nó lại liên quan mật thiết đến giải tích của các hàm vuông góc. Tôi làm M.S. Thesis Toán trong nhánh này. Mặc dù bây giờ không làm về nó nữa, nhắc lại vẫn còn thấy “nhiệt huyết” bừng bừng 🙂 . Ngoài ra, nhánh này cũng là anh em cột chèo với algebraic graph theory, rất cần thiết trong cả complexity theory lẫn một số bài toán trong mạng máy tính! Đó là chưa kể liên minh sống còn với representation theory cũng lại được dùng trong KHMT (như trong loạt bài về nhân ma trận tôi đang viết dở).\n\n\n  Chris Godsil, Algebraic Combinatorics, Chapman &amp; Hall/CRC (April 1, 1993).\n  Chihara, An Introduction to Orthogonal Polynomials, Routledge; 1 edition (January 1, 1978). Quyển kinh điển về các đa thức vuông góc.\n  George E. Andrews, Richard Askey, Ranjan Roy, Special Functions, Cambridge University Press; New Ed edition (February 15, 2001). Tất cả những thứ bạn cần biết về các hàm đặc biệt!\n  William Fulton, Young Tableaux: With Applications to Representation Theory and Geometry, Cambridge University Press (December 28, 1996).\n  I. G. Macdonald, Symmetric Functions and Hall Polynomials, Oxford University Press, USA; 2 edition (June 30, 1999). Quyển này và quyển của Fulton là kinh điển về symmetric functions.\n\n\n3.6 Extremal set theory, extremal set systems, và design theory\nNhững thứ này thì dùng làm gì trong KHMT? Một vài ví dụ nhỏ: chúng liên quan mật thiết với lý thuyết thử nhóm (group testing) được dùng trong DNA library screening (bio-computing), trong thiết kế MAC protocols và thử lỗi của mạng quang (networking), và thiết kế thuật toán nói chung. Design theory lại cũng liên quan chặt chẽ với coding theory (sẽ giới thiệu sách sau) dùng trong communications và trong complexity theory.\n\n\n  Konrad Engel, Sperner Theory, Cambridge University Press. Phát triển lý thuyết của một định lý rất đơn giản và hùng mạnh trong topology: định lý Sperner.\n  Bela Bollobas, Combinatorics, Cambridge University Press. Nhỏ và hiệu quả!\n  A. E. Brouwer, A. M. Cohen, A. Neumaier, Distance Regular Graphs, Springer (August 1989). Nhiều bài toán thiết kế các cấu trúc extremal có thể được mô hình hóa bằng distance regular graphs: một loại đồ thị rất giàu có về cấu trúc đại số, nhờ đó bài toán trở nên tổng quát hơn (dùng công cụ của đại số), và đôi khi dễ dàng hơn.\n  Ding-Zhu Du and Frank K. Hwang, Combinatorial Group Testing and Its Applications, World Scientific Publishing Company; 2nd edition (May 2000). Quyển này là tham khảo chính (và duy nhất) cho lý thuyết thử nhóm. Nó là dạng monograph chứ không phải textbook, dùng làm tham khảo.\n\n\n4. Xử lý ngôn ngữ tự nhiên (danh sách của anh Bạch Hưng Nguyên).\n\nSách cơ bản:\n\n\n  [1] Manning &amp; Schutze, Foundation of Statistical NLP – (có online nếu có access vào MIT library)\n  [2] Jurasky &amp; Martin, Speech&amp;Language Procesing: An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition, 2nd edition.\n\n\nTham khảo thêm:\n\n\n  [3] James Allen, Natural Language Understanding\n  [4] Fred Jelinek, Statistical Method for Speech Recognition\n  [5] Xudong Huang et al, Spoken Language Processing\n\n\nLộ trình tự đọc &amp; học trong 1 hoặc 2 học kì theo thứ tự sau\n\n\n  \n  Chương 1+2+3+4 – [1]: Introduction / Mathematical Foundations/ Linguistic Essential / Corpus-based Work\nChương 7 – [2]: Phonetics\n——–\nChương 6 – [1]: Statistical Inference: n-gram Models over Sparse Data\nChương 4 – [2]: N-grams\n——–\nChương 8 – [5]: Hidden Markov Models\nChương 2 – [4]: Hidden Markov Models\nChương 4 – [2]: Word Classes and Part-of-Speech Tagging\nChương 6 – [2]: Hidden Markov and Maximum Entropy Models\n——–\nChương 3 – [3]: Grammar and Parsing\nChương 12 – [2]: Formal Grammars of English\nChương 11 – [1]: Probabilistic Context Free Grammar\nChương 12 – [1]: Probabilistic Parsing\nChương 13 – [2]: Parsing with Context-Free Grammars\nChương 14 – [2]: Statistical Parsing\n——–\nChương 3 – [2]: Words and Transducers\n——–\nChương 22 – [2]: Information Extraction\n——–\nChương 25 – [2]: Machine Translation\n——–\nChương 15 – [1]: Topics in Information Retrieval\n——–\nChương 16 – [1]: Text Categorization\n——–\n\n\nLộ trình này giới thiệu chuyên sâu về phương pháp thống kê NLP, mô hình n-gram , mô hình Markov ẩn, &amp; kĩ thuật phân tích câu (parsing). Sau đó là giới thiệu sơ qua một số topics mà NLP đóng vai trò quan trọng như Trích chọn Thông Tin (Information Extraction), Dịch tự động (Machine Translation), Khai Thác Thông Tin (Information Retrieval), &amp; Phân Loại Văn Bản (Text Categorization). Về cơ bản sau khi xong lộ trình này là đủ để bắt tay vào chuyên sâu các vấn đề trong NLP. Rất nhiều topics của NLP không đề cập trong lộ trình này ví dụ như: Các máy Hữu hạn trạng thái (Finite-state Machines), Các kĩ thuật học máy (Machine Learning techniques), Nhận dạng tiếng nói (Speech Recognition), Tổng hợp tiếng nói (Speech Synthesis), Hệ thống Hỏi-Đáp (Q&amp;A systems).\n\nSẽ tiếp tục cập nhật! Không biết bao giờ mới xong.\n\n",
  id: 3
});
index.addDoc({
  title: "How to use Google Analytics API",
  author: null,
  layout: "post",
  content: "Note! I don’t use this feature on my site any more. However, you can see my old script here\n\nThe screenshoot look like this\n\n\n  \n\n\n\n\nI want to display pageview on my blog (you can see the “eye” icon near the date of the post). One problem is this blog is static blog (powered by Jekyll), so I think about use Google Analytics to do that. I found a ton of document, there are many keyword on Google Cloud Product.\n\n  Services Account\n  Access Token\n  Fresh Token\n  OAuth 2.0\n\n\nDo I need spend all my free time to understand these?\n\nI don’t know where can I start, I just want to it as simple as possible.\nUsing google API is not easy task for me in the first time, even it is several line of code. I tried to find a sample example on github page, but I failed. I can’t find any instruction one by one to do that. Therefore, I want to share with you how can I do that. Let’s see.\n\n1. Setting on your account\nIn this step you need to find:\n\n  Your Profile ID: profileID\n  Service account private key (KEY_FILEPATH *json file)\n\n\n1.1 Add a Services Account\n1. Goto Google console\n2. Click Create service account on the top, near navigation bar.\n\n  \n\n3. Click CREATE KEY, choose json\n\nYou are able to download this private json file only one time.\n\n\n  \n\n\nAfter finish, you will see something like this.\n\n  \n\n\n1.2 Add the Services Account to your Google analytics service\n\n1. Goto Google analytics\nit will redirect you to link like this:\nhttps://analytics.google.com/analytics/web/#/a133437467w193286472p188904382/admin/account/settings\n\n\n/a[6 digits]w[8 digits]p[8 digits]\n\nThe 8 digits which after the “p” are your profile ID. (in my case this is 188904382)\n\n2. Click User Management\n\n  \n\n\n3. Click + on the top to add Service Account &gt; Click Add users\n\n  \n\n\n  \n\n\nAfter finish, you will see something as following.\n\n  \n\n\n2. Using ruby\n\n\n\nSample output as following.\n20\n/life/nguoi-la-mai-thao-yen.html\n1\n/life/nguoi-la-mai-thao-yen/\n13\n/openwrt/2019/02/11/upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb.html\n1\n/openwrt/upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb\n\n\n3. Using python\n\n\n\nSample output as following.\n['/about.html', '2'],\n['/archive.html', '5'],\n['/archive.html?tag=An+Nam', '1'],\n['/archive.html?tag=Nguyễn+Ái+Quốc', '2'],\n['/archive.html?tag=Văn+học', '7'],\n['/archive.html?tag=life', '1'],\n['/categories/', '18'],\n['/header-image', '4'],\n['/kkk', '3'],\n\n\n4. Some error you may encounted\n\nError: Authorization failed. Server message: { \"error\": \"invalid_grant\", \"error_description\": \"Invalid JWT: Token must be a short-lived token (60 minutes) and in a reasonable timeframe. Check your iat and exp values and use a clock with skew to account for clock differences between systems.\" }\n             Error: Run jekyll build --trace for more information.\n\nI use Ubuntu on my Virtual box but the Ubuntu time is not synced. Solution is update time on Ubuntu: sudo ntpdate time.nist.gov`\n\n5. References\n\n  Google Query Explorer\n  Martin Fowler blog\n  Jekyll-Ga-V2 A Plugin To Get Google Analytics Data Into Your Site - Jekyll static site\n\n",
  id: 4
});
index.addDoc({
  title: "Brazil bâng quơ",
  author: null,
  layout: "post",
  content: "Anh đã làm mọi thứ để không phải đi, vì anh biết rằng chuyến đó sẽ chẳng dễ dàng gì. Support xuyên đêm anh cũng đã thử, anh đã cố nghĩ hết các trường hợp có thể xảy ra, nhưng không có kết quả. Và rồi cái gì đến cũng phải đến, anh phải đi mặc dù tâm trí đang đâu đâu, kế hoạch là gì anh không biết, anh chưa từng gặp phải tình huống như vậy. Và vì để chứng tỏ người Việt Nam mình không thua kém, anh đi.\nCảm giác khó chịu đầu tiên là chuyên bay dài quá, phải mất 8h đồng hồ từ VN -&gt; Qatar, và anh lại phải transit 8h nữa ở Qatar để rồi mất thêm 16h nữa từ Qatar -&gt; Sao Paulo, vậy là anh sẽ mất 32h đồng hồ để đến nơi cần đến. Cảm giác đầu tiên khi đến Qatar là bọn nó làm ăn chuyên nghiệp hơn mình nhiều. Mình đang lơ ngơ không biết khu vực transit đi lối nào thì đã có ngay 1 thằng nhân viên ra hỏi và giúp đỡ tận tình. Tiếp đến là cần phải tìm nơi nào đó để ngủ. Ở Qatar có rất nhiều Sleeping room xếp dọc lối đi ra các cửa ra máy bay hoặc gần khu vực vệ sinh. Nếu không biết thì bạn có thể hỏi bất cứ nhân viên nào ở đó.\nNào dậy đi, anh còn cần bay thêm 16h nữa. Đây là thời gian tù nhất, vì ngủ nhiều thì đau đầu, không ngủ thì không biết làm gì cả. Xem TV thì nó đặt gần quá, mắt mình lại 11/10 nên nhìn gần rất là khó chịu, có lẽ lần sau nên đi vé thương gia xem thế nào :laughing:\nThôi thì trầy trật mãi cũng đến Sao Paulo, một thành phố anh được nghe nói là đầy nguy hiểm. Tuy nhiên, anh đâu có tâm trí để ý đến điều đó. Cái làm anh suy nghĩ là làm sao cho xong việc còn về. Khó khăn mới chỉ bắt đầu, tuần đầu tiên anh đến chỗ khách hàng vài lần, không tìm thấy lỗi và câu chuyện còn dài lắm. Dự định của anh đầu tiên là 14 ngày, nhưng phải đến 42 ngày anh mới được về nhưng mới chỉ hoàn thành 70% công việc.\nAnh có tuyệt vọng không?\n\n  Có.\n\nAnh có bao giờ muốn từ bỏ mọi thứ không?\n\n  Tất nhiên là có, vì mình không biết bắt đầu từ đâu, có quá nhiều dữ liệu đầu vào, mình lại không có nhiều thời gian.\n\nBây giờ khi đã có một phần đáp án thì nếu cho bắt đầu lại, anh sẽ bắt đầu như thế nào?\n\n  Thực ra cho đến bây giờ, nếu cho bắt đầu lại thì anh vẫn không biết bắt đầu như thế nào. Thế giới phần mềm quả thật rộng lớn, bất cứ một lỗi nào dù nhỏ cũng có thế phá hỏng hệ thống, vì nó rộng lớn quá so với thời gian anh có nên anh như bị chôn chân trong chính suy nghĩ của mình.\n\nKhi một mình trên một đất nước xa lạ, đồng nghiệp thì ở xa và khác múi giờ, anh chỉ còn biết trông chờ vào chính mình. Cũng từ đây, anh hiểu thế nào là tự lập, thế nào là sự cô đơn và niềm tin anh đặt vào chính mình. Chỉ cần một hướng đi sai, anh có thể mất cơ hội để tìm ra vấn đề. Người ta nói rằng “What doesn’t kill you, makes you stronger!”, điều duy nhất anh có thể bám víu để tiếp tục, để không gục ngã.\nVào thứ 7, chủ nhật khi không phải đi làm, anh có thời gian nghĩ lại về cuộc đời mình. Một suy nghĩ cứ mãi luẩn quẩn trong đầu anh “What is your dream?”. Không biết bao nhiêu lần anh tự hỏi mình như thế. Và ở đây, một đất nước xa lạ, nó làm anh chạnh lòng.\nChuyến đi này có phải nằm trong dự định của anh?\n\n  Không, anh không muốn đến nơi đây, tại sao anh phải đến đây cơ chứ? Anh sẽ tìm được giấc mơ của mình ở đây chăng? Có thể lắm chứ.\n\nDù sao, anh cũng nhận ra được một điều: Nếu không có một quyết tâm vững vàng, một mục đích xác định, và đi đến cùng tới giấc mơ đó thì chắc chắn anh sẽ gục ngã, sẽ buông xuôi. Hành trình tìm kiếm và thực hiện giấc mơ chưa bao giờ và sẽ không bao giờ là dễ dàng cả. Và anh cần phải khắc sâu vào tiềm thức mình điều đó. Thà để anh chết trên con đường đi tìm giấc mơ của mình hơn là chết trong những lo sợ mà không dám tìm kiếm nó.\nAnh bắt đầu nghĩ nhảm, anh thấy sao bọn nó hiện đại hơn mình quá. Đường xá thì không bằng phẳng như mình đâu, mà toàn như kiểu đi trên núi. Nhưng anh chưa thấy người ta vượt đèn đỏ bao giờ, cũng không bóp còi inh ỏi như ở mình, ở đây họ hay dùng tay để ra hiệu :+1: nghĩa là ổn, mày sang đường đi. Hệ thống tàu điện ngầm của bọn này thì to kinh khủng, ở những đoạn nối giữa các line, phải đi bộ đến mấy tầng để chuyển sang line tiếp theo. Trên mỗi toa tàu đều có tiếng Bồ Đào Nha và tiếng Anh, nên sử dụng rất đơn giản.\nNgồi trên tàu điện ngầm, một vài suy nghĩ cứ lẳn quẩn trong tâm trí:\n\n  Người ta sẵn sàng bỏ ra một số tiền lớn để mua một chiếc IPhone, nhưng có ai chấp nhận bỏ ra một số tiền lớn cho một bữa ăn.\n\nDĩ nhiên là không, không ai muốn bỏ ra một khoản lớn cho nhu cầu cơ bản của mình cả. Mặc dù nhu cầu cơ bản là cái quan trọng hơn. Anh có thể chết nếu không ăn uống, nhưng nếu thiếu “Smart phone”, anh vẫn sống ngon ơ. Trước đây, anh thường băn khoăn về con đường phía trước của mình. Anh muốn trở thành một gã nông dân, anh muốn sống trên núi được gần với thiên nhiên.\n\n  Xuân ăn măng trúc, đông ăn giá.\n\nNhưng anh à, đất nước cần những người nông dân như anh từng nghĩ, nhưng đất nước cần hơn những kỹ sư xây tàu điện ngầm, xây sân bay, sản xuất máy tính, điện thoại những thứ cần công nghệ tiên tiến hơn so với công nghệ nông nghiệp. Đứng vào đâu, tập trung vào lĩnh vực nào, lựa chọn là ở anh.\nCòn nữa ….\n",
  id: 5
});
index.addDoc({
  title: "Người lạ - Mai Thảo Yên",
  author: null,
  layout: "post",
  content: "Tôi bắt gặp Người lạ trong bài giới thiệu Văn học tuổi 20 của báo Tuổi trẻ.\nỞ cái tuổi của tác giả và của tôi thì những suy nghĩ về cuộc đời, những câu hỏi không tìm được lời giải khá là rõ nét. Câu chuyện bắt đầu với một sự chơi vơi, sự hoài nghi để rồi kết thúc trong một khoảng không vô định, cô đơn đến nao lòng.\n\n  Dù sao, chính An đã chọn đưa mình đến đây, ngồi ở những bậc thang đá này và mơ về biển khơi. Cái giá phải đánh đổi dù sao cũng vừa vặn và công bằng so với sự tham lam của cô.\n\n\nTrước khi đọc cuốn sách này, tôi cứ nghĩ du học là thiên đường, khi nghe những lời tâm sự của An - mà có thể cũng là chính của tác giả thì mới thấu hiểu phần nào của sống của những du học sinh như An. Đó hẳn phải là một sự hi sinh, chịu đựng rất lớn, nhưng như theo cách cô nói - dù sao nó cũng công bằng với những ước mơ hoài bão của cô.\n\n\n  Nhưng buổi chiều hôm nay, khi chỉ còn An một mình trên bậc thang này, khi thanh âm rõ ràng nhất không đến từ tiếng sóng nước đập vào bờ cuồn cuộn, mà đến từ sự trống trải trong lòng, cô lại thấy mình như một chiếc thuyền đã rời bến. Ở giữa khơi xa, con thuyền này cần những ngọn gió sau lưng, sóng biển bốn bề, và cảm giác lao về phía trước để thấy mình toàn vẹn. Kể cả khi không rõ điểm đến là đâu. Kể cả khi có thể chẳng có điểm đến nào dành cho nó. An có thể đi rất nhiều chân trời, ngắm nhìn cuộc sống muôn màu ở những bến cảng khác nhau, nhưng về sau cùng, cô vẫn cần có biển cả, cần có sự lênh đênh này để nhìn thấy chính mình. Có lẽ kiếp sống này buộc An phải trở thành một người lạ ở chính quê hương cô, ở cả thành phố đã chứng kiến cô trưởng thành, trầy trật, va vấp. Mà cũng có lẽ, nếu người ta có một thứ gọi là bản chất, thì bản chất của An chình là chiếc thuyền đó.\n\n\nĐã bao giờ bạn cảm thấy cô đơn trên chính ngôi nhà của mình, lạc lõng giữa thành phố đầy bon chen, phiền muộn? Và nếu muốn biến mình thành một con thuyền, có thể bơi ra biển lớn, để một lần được hiểu về bản chất của chính mình, bạn có đủ dũng cảm để ra đi? Bạn có đủ nghị lực để vượt qua được sự cô đơn sắp đến?\n\nSẽ chẳng có một câu trả lời nào hoàn hảo, cũng không ai trả lời cho bạn, hoặc nếu có ai đó cho bạn lời khuyên thì chắc gì đã đúng với bạn? Bạn là duy nhất, vậy nên hãy tự tìm câu trả lời cho chính mình. Và khi đã lựa chọn rồi thì cũng đừng quay lại, chẳng có quyết định nào là hoàn toàn đúng hay sai cả. Cuộc sống không đơn giản như vậy, cũng không thể rạch ròi trắng-đen, đúng-sai. Hãy trân quý điều đó vì cuộc sống muôn màu. Điều này có vẻ đi ngược lại thế giới của máy tính, khi chúng ta chỉ có những bit 1 và 0, thế giới của máy tính thật buồn tẻ và đơn giản, còn cuộc sống của chúng ta thì không.\n",
  id: 6
});
index.addDoc({
  title: "Upgrade flash chip on TP-Link from 4mb to 8mb",
  author: null,
  layout: "post",
  content: "1. Pre-requirement\n\n  New flash chip: I used Winbond 8MiB GD25Q64CSIG\n  Soldering iron: desolder old flash chip and re-solder new flash chip\n  ROM programer and IC socket: I am using CH-341A (~ 5$)\n  One PC/Laptop\n\n\n2. Let’s do it\n2.1 Desolder old flash chip\nHot air soldering station is ideally suited for desoldering flash. If you not, you can follow this video to do this.\n\n2.2 Program new flash chip\nFirstly, you need to choose new flash chip you want to replace. Why I chose Winbond GD25Q64CSIG for replacement, see table bellow:\n\n\n\nI see the name of flash chip is the same, so I didn’t checked datasheet for compatible.\n\nSecondly, you need to choose OpenWRT firmware.\nWhy I used openwrt-18.06.1-ramips-mt76x8-tl-wr841n-v13-squashfs-sysupgrade instead of openwrt-18.06.1-ramips-mt76x8-tl-wr840n-v5-squashfs-sysupgrade?\n\nBecause it used the same CPU and different in flash and RAM chip.\n\n\nNote! You are able to use openwrt-18.06.1-ramips-mt76x8-tl-wr840n-v5-squashfs-sysupgrade with 8MB flash chip, your router still booting but you can not any configuration after reboot. You may got error Your image is probably too big, leaving not enough space for jffs2\n\nIn the first time, I faced this problem. I can not save any configuration after reboot. If you look at boot log, it read:\n\n\nNo /overlay will be mounted:\n\n\nIf everything is good, it should be like this:\n\n\nNow, you have new flash chip and suitable firware, but you can not use this firware to program new flash chip. Because RAW flash need more partion than firmware such as: bootloader and art. See more in here\n\nYou can use bellow shell script to generate firmware for any flash with different capacity.\n\n\n\n\nIf you don’t want to use this script, you can create image by yourself. You may to need hex editor like HxDen to do this.\n\n  \n  New firmware layout\n\n\nAll file which I used in here\n2.3 Re-solder new flash chip\nAfter use CH341A to program new flash chip, you can re-solder new flash chip on target board.\n\nNote! If your board can not booting, don’t worry. You can use Clip Socket Adapter to try program flash again with out desolder chip.\n3. Enjoy\n\n  \n  Software with new flash chip (8MB).\n\n\nNote! I used image come from TL-WR841N v13.x, except for LED will not working, everything work well (Wi-Fi, Ethernet, Router feature).\n",
  id: 7
});
index.addDoc({
  title: "Gửi thanh niên An Nam",
  author: null,
  layout: "post",
  content: "Ông Đu-Me, nguyên toàn quyền Đông Dương đã viết:\n\n\n  “Khi nước Pháp đến Đông Dương, thì dân tộc Việt Nam đã chín muồi để làm nô lệ”.\n\n\nTừ đó đến nay hơn một nửa thế kỷ đã trôi qua. Nhiều biến cố phi thường đã làm đảo lộn thế giới. Nhật-Bản đã đứng vào hàng đầu các cường quốc trên thể giới. Trung-Hoa đã làm cách mạng. Nga đã tống cổ lũ bạo chúa đi để trở thành một nước cộng hoà vô sản. Một luồng gió giải phóng mạnh mẽ đã làm cho các dân tộc bị áp bức vùng lên. Người Ai-rơ-lan, Ai-Cập, Triều-Tiên, Ấn-Độ, tất cả những người chiến bại hôm qua và nô lệ hôm nay đó, đương đấu tranh dũng cảm cho nền độc lập ngày mai của họ. Riêng người Việt Nam, thì vẫn cứ thế: sẵn sàng làm nô lệ.\n\nHãy nghe đoạn văn khốn nạn này của một tên khách Việt Nam trong một bữa tiệc hai trăm người ăn, tổ chức ra để chiêu đãi bọn U-tơ-rây, Va-luy-dơ và bè lũ và để ngửi mùi bít tất thối của bọn “liên minh dân tộc” này. Anh chàng Việt Nam ấy đã không ngại bỏ ra 85 quan cho một bữa chè chén. Hắn đọc diễn văn tại bữa tiệc:\n\n\n  “Tôi lấy làm tự hào được thay mặt cho toàn thể cử tọa nói lên tấm lòng tôn kính sâu sắc, niềm vui mừng và lòng biết ơn của chúng tôi đối với các vị. Đối với con mắt khâm phục của chúng tôi, các vị thật là tiêu biểu cho chính phủ của dân tộc Pháp vinh quang. Tôi không tìm ra dược danh từ nào đủ đẹp để nói lên cho thật đúng ý nghĩa của tư tưởng sâu kín trong chúng tôi, nhưng thưa các vị, các vị hãy tin ở tình gắn bó thuỷ chung, ở lòng trung thành, ở sự sùng bái của chúng tôi đối với nước Đại Pháp, là người đỡ đầu và bảo hộ, đã coi chúng tôi như con, không phân biệt mầu da và chủng tộc. Mỗi người của chúng tôi đều đã tự mình nhận thấy tất cả những ân huệ mà Nhà nước chí tôn và những vị đại diện cho nước Đại Pháp đã ban cho chúng tôi bằng cách áp dụng đúng đắn và sáng suốt những luật pháp rộng rãi và khoan hồng.”\n\n\nTrong đám tang viên toàn quyền Lông, ông N.K.V., tiến sĩ luật, tiến sĩ khoa chính trị và kinh tế, làm việc tại toà biện lý Sài Gòn, đã quả quyết rằng, nếu có thể phát biểu thay toàn thể nhân dân Đông Dương, thì ông sẽ đau đớn nói lên lời cảm tạ thiết tha đối với quan toàn quyền về tất cả những gì mà Ngài đã làm cho dân tộc Việt Nam. Rồi ông V. kêu to lên rằng:\n\n\n  “Những người mà nhờ những biện pháp bao dung của Ngài, ngày nay đang đựơc cùng các vị đại diện của Nhà nước bảo hộ góp phần vào sự phồn vinh không ngừng tăng lên của xứ Đông Dương, những người ấy cảm tạ Ngài tự đáy lòng và sùng bái hình ảnh của Ngài. Kinh tế là vấn đề mà Ngài lo nghĩ đến nhiều nhất. Ngài đã muốn cho Đông Dương có đủ trang bị kinh tế để trở thành một nước Pháp thứ hai, một nước Pháp hùng cường ở Viễn Đông, một chi nhánh của nước Pháp Cộng hoà! Ngài đã đem hết tâm hồn, trí não vào sứ mệnh của Ngài là khai hoá cho một dân tộc bị ngăn cản trên con đường tiến bộ vì nhiều điều kiện lịch sử và khí hậu. Ngài là người chiến sỹ vô song của tiến bộ và sứ giả của văn minh…”\n\n\nCòn ông Cao-Văn-Sen, kỹ sư, hội trưởng hội những người Đông dương tại Pháp, thì nói rằng việc ông Lông chết quá sớm là một cái tang cho Đông Dương. Rồi ông kết thúc bài điếu văn bằng những lời sau đây:\n\n\n  “Thưa quan toàn quyền, chúng tôi chân thành thương tiếc Ngài vì đối với tất cả chúng tôi, Ngài là một ông chủ bao dung, khoan thứ như một người cha”.\n\n\nTừ việc trên, tôi xin kết luận rằng, nếu quả thật tất cả những người Việt Nam đều rạp mình sát đất như bè lũ tay sai ấy của chính quyền thì người Việt Nam có phải chịu số kiếp nô lệ, cũng là đáng đời!\n\nThanh niên ta cũng nên cần biết là hiện nay có hơn hai nghìn thanh niên Trung-Hoa trên đất Pháp và độ năm vạn ở châu Âu và châu Mỹ. Hầu hết những thanh niên ấy đều đã tốt nghiệp Hán văn và tất cả đang là sinh viên - công nhân. Còn chúng ta, thì chúng ta có những sinh viên được học bổng và những sinh viên thường, nhờ ơn của nhà nước hay tiền của cha mẹ (hại thay, hai cái nguồn đấy đều không bao giờ cạn cả), mà đang dành một nửa thì giờ vào các việc… chơi bi-a, một nửa của nửa thì giờ còn lại để đến các chốn ăn chơi; số thì giờ còn lại, mà ít khi còn lắm, thì để vào trường đại học hoặc trường trung học. Nhưng sinh viên - công nhân Trung Quốc thì lại không có mục đích nào khác hơn là nhằm thực sự chấn hưng nền kinh tế nước nhà; và họ theo châm ngôn:\n\n\n  “Sinh sống bằng lao động của bản thân và vừa học hỏi vừa lao động”.\n\n\nHọ đã làm như thế này: vừa đặt chân lên đất nước người là tất cả những người có năng khiếu giống nhau và cùng muốn học một nghề thì tập hợp lại thành nhóm để vận động xin việc với bọn chủ. Khi được nhận vào xưởng thợ hay nhà máy thì cố nhiên là họ bắt đầu bằng cách học việc, rồi sau trở thành thợ.\n\nĐối với nhiều người đã được nuôi dưỡng trong cảnh giàu sang và được gia đình chiều chuộng, thì làm những viêc nặng nhọc là một điều gian khổ. Nếu họ không có một quyết tâm vững chắc, không được một sức mạnh tinh thần phi thường thúc đẩy thì phần lớn đã phải chùn bước.\n\nNhưng cho tới nay tất cả vẫn tiếp tục làm việc. Một trở lực thứ hai là ngôn ngữ bất đồng, họ đã khắc phục được trở lực ấy nhờ biết lợi dụng khiếu quan sát, cái khiếu gần như là một bản năng đặc biệt của những người Viễn đông chúng ta. Nếu họ không hiểu được hay hiểu một cách khó khăn những lời chủ họ nói, thì họ chăm chú quan sát những cái mà chủ chỉ cho họ.\n\nHọ kiếm không được bao nhiêu tiền. Với số tiền công ít ỏi, trước hết họ phải tính sao cho đủ sống. Và, họ coi việc không xin tiền chính phủ, không xin tiền gia đình là một vấn đề danh dự. Sau nữa, tuỳ theo số tiền kiếm được họ trích một phần để đóng vào quỹ tương tế do họ lập ra. Quỹ này nhằm hai mục đích:\n\n  Giúp đỡ những sinh viên đau ốm có giấy chứng nhận của thầy thuốc, và những sinh viên thất nghiệp có giấy chứng nhận của chủ.\n  Trợ cấp một số tiền trong một năm cho tất cả những người mới học nghề xong để giúp họ bổ túc nghiệp vụ.\n\n\nLao động ở nước nào, họ cũng xuất bản ở đấy một tờ tạp chí (luôn luôn là do sinh viên - công nhân đóng góp). Tạp chí ấy viết bằng chữ Hán, cung cấp tin tức của Tổ quốc và đăng những vấn đề lớn trên thế giới, v.v… Tạp chí dành một mục cho độc giả trao đổi những việc bổ ích cho việc học nghề của họ, báo cho nhau biết sự tiến bộ của từng người, khuyên nhủ và động viên nhau. Ban ngày họ làm việc, ban đêm họ học tập.\n\nKiên trì, quyết tâm và đoàn kết như thế, các “ông chủ trẻ tuổi” của chúng ta chắc chắn sẽ đạt mục đích. Với một đạo quân 50.000 công nhân dũng cảm đáng khâm phục, lại được đào tạo trong kỷ luật và kỹ thuật hiện đại, thì không bao lâu nữa, Trung Quốc sẽ có địa vị trong hàng các cường quốc công nghiệp và thương nghiệp thế giới.\n\nỞ Đông Dương, chúng ta có đủ tất cả những cái mà một dân tộc có thể mong muốn như: hải cảng, hầm mỏ, đồng ruộng mênh mông, rừng rú bao la; chúng ta có những người lao động khéo léo và cần cù.\n\nNhưng chúng ta thiếu tổ chức và thiếu người tổ chức! Bởi thế công nghiệp và thương nghiệp của chúng ta là một con số không. Thế thì thanh niên của ta đang làm gì? Nói ra thì buồn, buồn lắm: Họ không làm gì cả.\n\n\n  Những thanh niên không có phương tiện thì không dám rời quê nhà; những người có phương tiện thì lại chìm ngập trong sự biếng nhác; còn những kẻ đã xuất dương thì chỉ nghĩ đến việc thoả mãn tính tò mò của tuổi trẻ mà thôi!\n\n\nHỡi Đông Dương đáng thương hại! Người sẽ chết mất, nếu đám thanh niên già cỗi của Người không sớm hồi sinh.\n\n– 1925\n\n(Phụ lục Bản án chế độ thực dân Pháp, nguyên tác tiếng Pháp Le Procès de la Colonisation Francaise, Librairie du Travail, Paris 1925, bản dịch tiếng Việt của xnb Sự Thật, Hà Nội 1960)\n\nNguồn: http://www.talawas.org/talaDB/showFile.php?res=1569&amp;rb=0504\n",
  id: 8
});
console.log( jQuery.type(index) );

// Builds reference data (maybe not necessary for us, to check)
var store = [{
  "title": "Cứ đi rồi sẽ đến... [Chuyện đi học]",
  "author": null,
  "layout": "post",
  "link": "/schoolarship/cu-di-roi-se-den-chuyen-di-hoc",
}
,{
  "title": "Một nghề cho chín còn hơn chín nghề",
  "author": null,
  "layout": "post",
  "link": "/life/mot-nghe-cho-chin-con-hon-chin-nghe",
}
,{
  "title": "Làm an toàn thông tin thì học gì",
  "author": null,
  "layout": "post",
  "link": "/life/lam-attt-thi-hoc-gi",
}
,{
  "title": "Học Khoa Học Máy Tính nên đọc sách gì",
  "author": null,
  "layout": "post",
  "link": "/life/hoc-khmt-nen-doc-sach-gi",
}
,{
  "title": "How to use Google Analytics API",
  "author": null,
  "layout": "post",
  "link": "/blog/how-to-use-google-analytics-api",
}
,{
  "title": "Brazil bâng quơ",
  "author": null,
  "layout": "post",
  "link": "/life/brazil-co-don-truong-thanh",
}
,{
  "title": "Người lạ - Mai Thảo Yên",
  "author": null,
  "layout": "post",
  "link": "/life/nguoi-la-mai-thao-yen",
}
,{
  "title": "Upgrade flash chip on TP-Link from 4mb to 8mb",
  "author": null,
  "layout": "post",
  "link": "/openwrt/upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb",
}
,{
  "title": "Gửi thanh niên An Nam",
  "author": null,
  "layout": "post",
  "link": "/life/gui-thanh-nien-an-nam",
}
]

// Query
var qd = {}; // Gets values from the URL
location.search.substr(1).split("&").forEach(function(item) {
    var s = item.split("="),
        k = s[0],
        v = s[1] && decodeURIComponent(s[1]);
    (k in qd) ? qd[k].push(v) : qd[k] = [v]
});

function doSearch() {
  var resultdiv = $('#results');
  var query = $('input#search').val();

  // The search is then launched on the index built with Lunr
  var result = index.search(query);
  resultdiv.empty();
  if (result.length == 0) {
    resultdiv.append('<p class="">No results found.</p>');
  } else if (result.length == 1) {
    resultdiv.append('<p class="">Found '+result.length+' result</p>');
  } else {
    resultdiv.append('<p class="">Found '+result.length+' results</p>');
  }
  // Loop through, match, and add results
  for (var item in result) {
    var ref = result[item].ref;
    var searchitem = '<div class="result"><p><a href="'+store[ref].link+'?q='+query+'">'+store[ref].title+'</a></p></div>';
    resultdiv.append(searchitem);
  }
}

$(document).ready(function() {
  if (qd.q) {
    $('input#search').val(qd.q[0]);
    doSearch();
  }
  $('input#search').on('keyup', doSearch);
});
