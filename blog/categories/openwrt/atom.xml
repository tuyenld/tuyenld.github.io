<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: openwrt | tuyenld]]></title>
  <link href="http://crushcoding.com/blog/categories/openwrt/atom.xml" rel="self"/>
  <link href="http://crushcoding.com/"/>
  <updated>2020-08-23T17:00:57+00:00</updated>
  <id>http://crushcoding.com/</id>
  <author>
    <name><![CDATA[Le Dinh-Tuyen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrade flash chip on TP-Link from 4mb to 8mb]]></title>
    <link href="http://crushcoding.com/blog/2019/02/11/upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb/"/>
    <updated>2019-02-11T00:00:00+00:00</updated>
    <id>http://crushcoding.com/blog/2019/02/11/upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb</id>
    <content type="html"><![CDATA[<p>How to upgrade flash chip on TPLink TL-WR840N v5.</p>

<!--more-->


<h2>1. Pre-requirement</h2>

<ul>
<li>New flash chip: I used Winbond 8MiB GD25Q64CSIG</li>
<li>Soldering iron: desolder old flash chip and re-solder new flash chip</li>
<li>ROM programer and IC socket: I am using CH-341A (~ 5$)</li>
<li>One PC/Laptop</li>
</ul>


<h2>2. Let&rsquo;s do it</h2>

<h3>2.1 Desolder old flash chip</h3>

<p>Hot air soldering station is ideally suited for desoldering flash. If you not, you can follow this video to do this.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/nZGEtpECPQY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


<h3>2.2 Program new flash chip</h3>

<p>Firstly, you need to choose new flash chip you want to replace. Why I chose <code>Winbond GD25Q64CSIG</code> for replacement, see table bellow:</p>

<table>
<thead>
<tr>
<th> Description </th>
<th>          Original         </th>
<th>                               Mod                               </th>
</tr>
</thead>
<tbody>
<tr>
<td> flash       </td>
<td> GigaDevice GD25Q32B (4MB) </td>
<td> Winbond GD25Q64CSIG (8MB)                                       </td>
</tr>
<tr>
<td> firmware    </td>
<td> TL-WR840N(VN)_V5_170517   </td>
<td> openwrt-18.06.1-ramips-mt76x8-tl-wr841n-v13-squashfs-sysupgrade </td>
</tr>
</tbody>
</table>


<p>I see the name of flash chip is the same, so I didn&rsquo;t checked datasheet for compatible.</p>

<p>Secondly, you need to choose OpenWRT firmware.
Why I used openwrt-18.06.1-ramips-mt76x8-tl-<strong>wr841n-v13</strong>-squashfs-sysupgrade instead of openwrt-18.06.1-ramips-mt76x8-tl-<strong>wr840n-v5</strong>-squashfs-sysupgrade?</p>

<p>Because it used the same CPU and different in flash and RAM chip.</p>

<table>
<thead>
<tr>
<th> Description </th>
<th> <a href="https://wikidevi.com/wiki/TP-LINK_TL-WR841N_v13.x">TP-LINK TL-WR841N v13.x</a> </th>
<th> <a href="https://wikidevi.com/wiki/TP-LINK_TL-WR840N_v5">TP-LINK TL-WR840N v5</a> </th>
</tr>
</thead>
<tbody>
<tr>
<td> CPU         </td>
<td> MediaTek MT7628NN (580MHz)                                                   </td>
<td> MediaTek MT7628NN @575MHz                                              </td>
</tr>
<tr>
<td> RAM         </td>
<td> Winbond W9751G6JB-25 (64MB)                                                  </td>
<td> ESMT M14D5121632A (64MB)                                               </td>
</tr>
<tr>
<td> Flash       </td>
<td> GigaDevice GD25Q64CSIG (8MB)                                                 </td>
<td> GigaDevice GD25Q32B (4MB)                                              </td>
</tr>
</tbody>
</table>


<p><strong>Note!</strong> You are able to use openwrt-18.06.1-ramips-mt76x8-tl-<strong>wr840n-v5</strong>-squashfs-sysupgrade with 8MB flash chip, your router still booting but you can not any configuration after reboot. You may got error <code>Your image is probably too big, leaving not enough space for jffs2</code>
{: .notice&ndash;warning}</p>

<p>In the first time, I faced this problem. I can not save any configuration after reboot. If you look at boot log, it read:</p>

<script src="https://gist.github.com/tuyenld/acb0f0e62cadca73b7dffc44d7cc1b4b.js?file=firmware_bad.log"></script>


<p>No <code>/overlay</code> will be mounted:</p>

<script src="https://gist.github.com/tuyenld/acb0f0e62cadca73b7dffc44d7cc1b4b.js?file=firmware_bad_no_overlay.log"></script>


<p>If everything is good, it should be like this:</p>

<script src="https://gist.github.com/tuyenld/acb0f0e62cadca73b7dffc44d7cc1b4b.js?file=firmware_good.log"></script>


<p>Now, you have new flash chip and suitable firware, but you can not use this firware to program new flash chip. Because <strong>RAW</strong> flash need more partion than firmware such as: bootloader and art. See more in <a href="https://openwrt.org/docs/techref/flash.layout">here</a></p>

<p>You can use bellow shell script to generate firmware for any flash with different capacity.</p>

<script src="https://gist.github.com/tuyenld/acb0f0e62cadca73b7dffc44d7cc1b4b.js?file=create_new_firmware.sh"></script>


<table>
<thead>
<tr>
<th>     parameter      </th>
<th>                                          Description                                          </th>
</tr>
</thead>
<tbody>
<tr>
<td> flash_size_in_MB   </td>
<td> new flash chip capacity                                                                       </td>
</tr>
<tr>
<td> sysupgrade_OpenWRT </td>
<td> OpenWRT image (firmware)                                                                              </td>
</tr>
<tr>
<td> art_file           </td>
<td> ART partion from original flash, the last 64k block of the chip no matter what the chip size. </td>
</tr>
<tr>
<td> boot_loader        </td>
<td> bootloader, the first 128kB from original flash                                               </td>
</tr>
<tr>
<td> Output firmware    </td>
<td> sysupgrade_OpenWRT_dump.bin, you can use this to program your new flash chip                  </td>
</tr>
</tbody>
</table>


<p>If you don&rsquo;t want to use this script, you can create image by yourself. You may to need hex editor like <a href="https://mh-nexus.de/en/hxd/">HxDen</a> to do this.
<figure class="align-center">
  <img src="2019-02-11-upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb/create_image_manual.jpg" alt="">
  <figcaption>New firmware layout</figcaption>
</figure></p>

<p>All file which I used in <a href="https://drive.google.com/file/d/1kqXvFQYrolipvrrD3Rkv7J7JTZwgVHDn/view?usp=sharing">here</a></p>

<h3>2.3 Re-solder new flash chip</h3>

<p>After use CH341A to program new flash chip, you can re-solder new flash chip on target board.</p>

<p><strong>Note!</strong> If your board can not booting, don&rsquo;t worry. You can use <a href="https://www.ebay.com/itm/SOIC8-SOP8-Flash-Chip-IC-Test-Clip-Socket-Adapter-BIOS-CH341A-USB-Programmer-/372555847443">Clip Socket Adapter</a> to try program flash again with out desolder chip.
{: .notice&ndash;warning}</p>

<h2>3. Enjoy</h2>

<p><figure class="align-center">
  <img src="2019-02-11-upgrade-flash-chip-tplink-tl-wr840n-4mb-to-8mb/software_status.jpg" alt="">
  <figcaption>Software with new flash chip (8MB).</figcaption>
</figure></p>

<p><strong>Note!</strong> I used image come from <strong>TL-WR841N v13.x</strong>, except for LED will not working, everything work well (Wi-Fi, Ethernet, Router feature).
{: .notice&ndash;warning}</p>
]]></content>
  </entry>
  
</feed>
